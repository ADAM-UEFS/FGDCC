INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 501, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 441, in train_step
    k_means_loss, k_means_assignments = k_means_module.assign(bottleneck_output, targets, device, cached_features_last_iter)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 130, in assign
    self.n_kmeans[y[i]][k].train(batch_x)
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/extra_wrappers.py", line 544, in train
    x = np.ascontiguousarray(x, dtype='float32')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor.py", line 1089, in __array__
    return self.numpy().astype(dtype, copy=False)
           ^^^^^^^^^^^^
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
Reconstruction loss: tensor(0.5901, device='cuda:0', grad_fn=<SmoothL1LossBackward0>)
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 381, in main
    k_means_module = KMeans.KMeansModule(nb_classes, dimensionality=256, k_range=K_range, resources=res, config=cfg)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 76, in __init__
    print(self.n_kmeans[0][0].index.resources)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'GpuIndexFlatL2' object has no attribute 'resources'. Did you mean: 'getResources'?
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 381, in main
    k_means_module = KMeans.KMeansModule(nb_classes, dimensionality=256, k_range=K_range, resources=res, config=cfg)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 77, in __init__
    print(self.n_kmeans[0][0].index.getConfig())
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'GpuIndexFlatL2' object has no attribute 'getConfig'
<faiss.swigfaiss_avx2.GpuResources; proxy of <Swig Object of type 'std::shared_ptr< faiss::gpu::GpuResources > *' at 0x7f0580756b80> >
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 381, in main
    k_means_module = KMeans.KMeansModule(nb_classes, dimensionality=256, k_range=K_range, resources=res, config=cfg)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 77, in __init__
    print(self.n_kmeans[0][0].index.config)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'GpuIndexFlatL2' object has no attribute 'config'
<faiss.swigfaiss_avx2.GpuResources; proxy of <Swig Object of type 'std::shared_ptr< faiss::gpu::GpuResources > *' at 0x7f06bc706e50> >
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 381, in main
    k_means_module = KMeans.KMeansModule(nb_classes, dimensionality=256, k_range=K_range, resources=res, config=cfg)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 77, in __init__
    print(self.n_kmeans[0][0].index.setConfig())
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'GpuIndexFlatL2' object has no attribute 'setConfig'
<faiss.swigfaiss_avx2.GpuResources; proxy of <Swig Object of type 'std::shared_ptr< faiss::gpu::GpuResources > *' at 0x7f89e42d8c00> >
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
<faiss.swigfaiss_avx2.GpuResources; proxy of <Swig Object of type 'std::shared_ptr< faiss::gpu::GpuResources > *' at 0x7f72145d49f0> >
0
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 501, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 441, in train_step
    k_means_loss, k_means_assignments = k_means_module.assign(bottleneck_output, targets, device, cached_features_last_iter)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 132, in assign
    self.n_kmeans[y[i]][k].train(batch_x)
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/extra_wrappers.py", line 544, in train
    x = np.ascontiguousarray(x, dtype='float32')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor.py", line 1089, in __array__
    return self.numpy().astype(dtype, copy=False)
           ^^^^^^^^^^^^
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 381, in main
    k_means_module = KMeans.KMeansModule(nb_classes, dimensionality=256, k_range=K_range, resources=res, config=cfg)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 78, in __init__
    print(self.n_kmeans[0][0].index.setDevice())
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'GpuIndexFlatL2' object has no attribute 'setDevice'. Did you mean: 'getDevice'?
<faiss.swigfaiss_avx2.GpuResources; proxy of <Swig Object of type 'std::shared_ptr< faiss::gpu::GpuResources > *' at 0x7fc51854cb40> >
0
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
[W socket.cpp:464] [c10d] The server socket has failed to bind to [::]:40112 (errno: 98 - Address already in use).
[W socket.cpp:464] [c10d] The server socket has failed to bind to 0.0.0.0:40112 (errno: 98 - Address already in use).
[E socket.cpp:500] [c10d] The server socket has failed to listen on any local network address.
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:distributed training not available The server socket has failed to listen on any local network address. The server socket has failed to bind to [::]:40112 (errno: 98 - Address already in use). The server socket has failed to bind to 0.0.0.0:40112 (errno: 98 - Address already in use).
INFO:root:Running... (rank: 0/1)
INFO:root:SLURM vars not set (distributed training not available)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 297, in main
    encoder = DistributedDataParallel(encoder, static_graph=True)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/parallel/distributed.py", line 731, in __init__
    self.process_group = _get_default_group()
                         ^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/distributed/distributed_c10d.py", line 1008, in _get_default_group
    raise ValueError(
ValueError: Default process group has not been initialized, please make sure to call init_process_group.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 381, in main
    k_means_module = KMeans.KMeansModule(nb_classes, dimensionality=256, k_range=K_range, resources=res, config=cfg)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 71, in __init__
    self.n_kmeans[cls][k].set_index(faiss.GpuIndexFlatL2(self.resources, self.d, self.config))
TypeError: Kmeans.set_index() takes 1 positional argument but 2 were given
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 381, in main
    k_means_module = KMeans.KMeansModule(nb_classes, dimensionality=256, k_range=K_range, resources=res, config=cfg)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 73, in __init__
    self.n_kmeans[cls][k].set_index(faiss.GpuIndexFlatL2(self.resources, self.d, self.config))
TypeError: Kmeans.set_index() takes 1 positional argument but 2 were given
<faiss.swigfaiss_avx2.GpuIndexFlatL2; proxy of <Swig Object of type 'faiss::gpu::GpuIndexFlatL2 *' at 0x7f582c0ad740> >
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 381, in main
    k_means_module = KMeans.KMeansModule(nb_classes, dimensionality=256, k_range=K_range, resources=res, config=cfg)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 71, in __init__
    index, _ = faiss.GpuIndexFlatL2(self.resources, self.d, self.config)
    ^^^^^^^^
TypeError: cannot unpack non-iterable GpuIndexFlatL2 object
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 381, in main
    k_means_module = KMeans.KMeansModule(nb_classes, dimensionality=256, k_range=K_range, resources=res, config=cfg)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 71, in __init__
    index = faiss.GpuIndexFlatL2(self.resources, self.d, self.config).index
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'GpuIndexFlatL2' object has no attribute 'index'
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 381, in main
    k_means_module = KMeans.KMeansModule(nb_classes, dimensionality=256, k_range=K_range, resources=res, config=cfg)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 75, in __init__
    print(self.n_kmeans[0][0].index.getResources())
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: Kmeans.set_index() takes 1 positional argument but 2 were given
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8173000> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8173000> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172e80> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172e80> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172dc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172dc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172b80> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172b80> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172ac0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172ac0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172a00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172a00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172880> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172880> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81727c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81727c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172700> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172700> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81724c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81724c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172400> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172400> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172280> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172280> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81721c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81721c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172100> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8172100> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8171f80> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8171f80> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8171ec0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8171ec0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8171e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8171e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8171c80> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8171c80> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8171bc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8171bc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8171b00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8171b00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8171980> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8171980> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81718c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81718c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81717a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81717a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81715f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81715f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81713e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81713e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81713b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81713b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81712f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81712f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81710e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81710e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81710b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81710b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170db0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170db0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170210> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170210> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170540> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170540> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81703f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81703f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81702d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81702d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170150> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170150> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170090> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8170090> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7f90> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7f90> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7d50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7d50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7c60> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7c60> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac79f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac79f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac79c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac79c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac77e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac77e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac72d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac72d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7600> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7600> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac74b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac74b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7270> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7270> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7240> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7240> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7180> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7180> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7090> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac7090> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6f10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6f10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6e50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6e50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6d60> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6d60> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6af0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6af0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6ac0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6ac0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac68e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac68e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac52c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac52c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6700> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6700> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac65b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac65b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6400> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6400> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6280> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6280> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac61c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac61c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6160> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6160> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac60d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac60d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5e60> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5e60> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5e30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5e30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5ad0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5ad0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5b90> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5b90> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac59b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac59b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5890> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5890> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5350> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5350> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5650> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5650> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5470> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5470> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac53b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac53b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5260> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac5260> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac50e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac50e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4f60> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4f60> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4e70> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4e70> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4ba0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4ba0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4ab0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4ab0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4120> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4120> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac45d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac45d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4420> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4420> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4450> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac4450> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac42d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac42d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6310> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2eac6310> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba3986f900> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba3986f900> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8bf30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8bf30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea89b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea89b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea88f30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea88f30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8bdb0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8bdb0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8bfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8bfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8bcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8bcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8bc60> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8bc60> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea88ea0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea88ea0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b9f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b9f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b810> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b810> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b720> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b720> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b540> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b540> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b3f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b3f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b090> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b090> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8a970> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8a970> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b210> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b210> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b120> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b120> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8aeb0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8aeb0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b060> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8b060> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8ad90> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8ad90> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8acd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8acd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8ac70> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8ac70> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8aa90> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8aa90> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8a8e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2ea8a8e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9c80e4900> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9c80e4900> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81b2b80> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81b2b80> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81c30c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81c30c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809a7c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809a7c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b827bd50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b827bd50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81989c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81989c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9c866de00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9c866de00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9c866dd40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9c866dd40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9c80c42d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9c80c42d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdad320> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdad320> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdad3e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdad3e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdad590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdad590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdad680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdad680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdad770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdad770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdad860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdad860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdad950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdad950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdada40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdada40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdadb30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdadb30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdadc20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdadc20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdadd10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdadd10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdade00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdade00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdadef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdadef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdadfe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdadfe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdae940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaea30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaea30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaeb20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaeb20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaec10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaec10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaed00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaed00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaedf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaedf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaeee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaeee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaefd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaefd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaf930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdafa20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdafa20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdafb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdafb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdafc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdafc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdafcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdafcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdafde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdafde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdafed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdafed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaffc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdaffc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c0f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c0f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c1e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c1e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c2d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c2d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c3c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c3c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c4b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c4b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c5a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c5a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810c960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ca50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ca50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810cb40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810cb40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810cc30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810cc30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810cd20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810cd20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ce10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ce10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810cf00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810cf00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810cff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810cff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d0e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d0e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d1d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d1d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d2c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d2c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d3b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d3b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d4a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d4a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810d950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810da40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810da40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810db30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810db30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810dc20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810dc20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810dd10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810dd10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810de00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810de00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810def0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810def0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810dfe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810dfe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810e940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ea30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ea30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810eb20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810eb20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ec10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ec10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ed00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ed00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810edf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810edf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810eee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810eee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810efd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810efd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810f930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810fa20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810fa20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810fb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810fb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810fc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810fc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810fcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810fcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810fde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810fde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810fed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810fed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ffc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ffc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81100f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81100f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81101e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81101e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81102d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81102d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81103c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81103c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81104b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81104b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81105a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81105a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8110ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81110e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81110e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81111d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81111d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81112c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81112c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81113b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81113b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81114a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81114a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8111fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81120d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81120d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81121c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81121c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81122b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81122b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81123a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81123a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8112fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81130c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81130c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81131b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81131b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81132a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81132a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8113fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81080f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81080f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81081e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81081e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81082d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81082d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81083c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81083c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81084b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81084b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81085a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81085a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8108ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81090e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81090e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81091d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81091d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81092c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81092c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81093b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81093b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81094a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81094a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8109fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810a940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810aa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810aa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ad00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ad00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810adf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810adf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810aee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810aee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810afd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810afd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810b930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810ba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810bb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810bb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810bc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810bc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810bcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810bcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810bde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810bde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810bed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810bed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810bfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b810bfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81140f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81140f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81141e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81141e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81142d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81142d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81143c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81143c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81144b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81144b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81145a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81145a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8114ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81150e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81150e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81151d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81151d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81152c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81152c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81153b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81153b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81154a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81154a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8115fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81160d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81160d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81161c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81161c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81162b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81162b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81163a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81163a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8116fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81170c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81170c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81171b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81171b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81172a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81172a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8117fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c0f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c0f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c1e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c1e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c2d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c2d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c3c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c3c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c4b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c4b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c5a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c5a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809c960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809ca50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809ca50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809cb40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809cb40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809cc30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809cc30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809cd20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809cd20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809ce10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809ce10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809cf00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809cf00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809cff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809cff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d0e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d0e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d1d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d1d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d2c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d2c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d3b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d3b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d4a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d4a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809d950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809da40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809da40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809db30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809db30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809dc20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809dc20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809dd10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809dd10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809de00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809de00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809def0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809def0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809dfe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809dfe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809e940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809ea30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809ea30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809eb20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809eb20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809ec10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809ec10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809ed00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809ed00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809edf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809edf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809eee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809eee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809efd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809efd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809f930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809fa20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809fa20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809fb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809fb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809fc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809fc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809fcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809fcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809fde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809fde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809fed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809fed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809ffc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b809ffc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81000f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81000f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81001e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81001e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81002d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81002d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81003c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81003c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81004b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81004b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81005a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81005a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8100ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81010e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81010e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81011d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81011d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81012c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81012c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81013b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81013b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81014a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81014a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8101fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81020d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81020d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81021c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81021c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81022b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81022b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81023a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81023a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8102fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81030c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81030c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81031b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81031b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81032a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81032a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8103fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81040f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81040f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81041e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81041e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81042d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81042d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81043c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81043c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81044b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81044b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81045a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81045a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8104ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81050e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81050e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81051d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81051d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81052c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81052c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81053b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81053b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81054a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81054a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8105fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81060d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81060d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81061c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81061c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81062b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81062b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81063a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81063a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8106fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81070c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81070c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81071b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81071b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81072a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81072a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8107fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81200f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81200f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81201e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81201e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81202d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81202d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81203c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81203c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81204b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81204b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81205a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81205a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8120ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81210e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81210e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81211d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81211d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81212c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81212c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81213b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81213b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81214a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81214a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8121fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81220d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81220d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81221c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81221c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81222b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81222b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81223a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81223a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8122fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81230c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81230c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81231b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81231b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81232a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b81232a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9b8123fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81740f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81740f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81741e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81741e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81742d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81742d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81743c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81743c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81744b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81744b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81745a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81745a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8174ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81750e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81750e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81751d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81751d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81752c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81752c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81753b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81753b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81754a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81754a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8175fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81760d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81760d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81761c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81761c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81762b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81762b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81763a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81763a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8176fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81770c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81770c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81771b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81771b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81772a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81772a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8177fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d40f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d40f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d41e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d41e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d42d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d42d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d43c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d43c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d44b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d44b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d45a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d45a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d4ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d50e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d50e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d51d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d51d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d52c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d52c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d53b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d53b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d54a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d54a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d5fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d60d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d60d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d61c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d61c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d62b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d62b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d63a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d63a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d6fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d70c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d70c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d71b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d71b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d72a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d72a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81d7fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e80f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e80f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e81e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e81e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e82d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e82d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e83c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e83c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e84b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e84b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e85a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e85a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e8ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e90e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e90e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e91d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e91d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e92c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e92c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e93b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e93b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e94a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e94a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e9fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ea940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eaa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eaa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ead00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ead00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eadf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eadf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eaee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eaee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eafd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eafd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eb930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81eba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ebb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ebb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ebc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ebc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ebcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ebcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ebde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ebde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ebed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ebed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ebfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ebfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e00f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e00f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e01e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e01e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e02d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e02d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e03c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e03c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e04b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e04b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e05a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e05a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e0ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e10e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e10e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e11d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e11d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e12c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e12c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e13b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e13b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e14a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e14a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e1fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e20d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e20d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e21c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e21c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e22b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e22b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e23a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e23a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e2fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e30c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e30c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e31b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e31b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e32a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e32a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81e3fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c40f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c40f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c41e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c41e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c42d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c42d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c43c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c43c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c44b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c44b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c45a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c45a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c4ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c50e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c50e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c51d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c51d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c52c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c52c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c53b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c53b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c54a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c54a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c5fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c60d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c60d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c61c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c61c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c62b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c62b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c63a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c63a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c6fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c70c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c70c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c71b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c71b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c72a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c72a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c7fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a80f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a80f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a81e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a81e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a82d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a82d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a83c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a83c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a84b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a84b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a85a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a85a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a8ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a90e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a90e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a91d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a91d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a92c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a92c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a93b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a93b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a94a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a94a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a9fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aa940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aaa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aaa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aad00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aad00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aadf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aadf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aaee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aaee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aafd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aafd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ab930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81aba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81abb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81abb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81abc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81abc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81abcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81abcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81abde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81abde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81abed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81abed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81abfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81abfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c00f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c00f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c01e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c01e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c02d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c02d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c03c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c03c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c04b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c04b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c05a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c05a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c0ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c10e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c10e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c11d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c11d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c12c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c12c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c13b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c13b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c14a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c14a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c1fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c20d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c20d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c21c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c21c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c22b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c22b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c23a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c23a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c2fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c30c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c30c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c31b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c31b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c32a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c32a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81c3fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b80f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b80f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b81e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b81e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b82d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b82d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b83c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b83c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b84b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b84b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b85a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b85a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b8ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b90e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b90e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b91d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b91d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b92c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b92c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b93b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b93b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b94a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b94a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b9fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81ba940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81baa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81baa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bad00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bad00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81badf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81badf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81baee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81baee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bafd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bafd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bb930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bbb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bbb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bbc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bbc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bbcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bbcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bbde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bbde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bbed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bbed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bbfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81bbfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b40f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b40f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b41e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b41e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b42d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b42d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b43c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b43c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b44b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b44b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b45a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b45a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b4ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b50e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b50e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b51d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b51d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b52c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b52c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b53b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b53b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b54a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b54a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b5fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b60d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b60d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b61c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b61c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b62b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b62b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b63a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b63a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b6fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b70c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b70c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b71b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b71b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b72a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b72a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81b7fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a40f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a40f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a41e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a41e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a42d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a42d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a43c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a43c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a44b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a44b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a45a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a45a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a4ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a50e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a50e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a51d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a51d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a52c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a52c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a53b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a53b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a54a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a54a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a5fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a60d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a60d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a61c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a61c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a62b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a62b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a63a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a63a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a6fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a70c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a70c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a71b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a71b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a72a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a72a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81a7fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81980f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81980f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81981e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81981e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81982d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81982d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81983c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81983c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81984b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81984b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81985a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81985a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8198ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81990e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81990e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81991d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81991d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81992c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81992c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81993b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81993b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81994a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81994a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8199fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819a940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819aa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819aa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819ab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819ab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819ac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819ac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819ad00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819ad00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819adf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819adf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819aee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819aee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819afd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819afd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819b930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819ba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819ba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819bb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819bb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819bc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819bc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819bcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819bcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819bde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819bde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819bed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819bed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819bfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e819bfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81940f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81940f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81941e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81941e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81942d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81942d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81943c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81943c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81944b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81944b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81945a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81945a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8194ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81950e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81950e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81951d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81951d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81952c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81952c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81953b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81953b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81954a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81954a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8195fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81960d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81960d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81961c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81961c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81962b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81962b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81963a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81963a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8196fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81970c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81970c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81971b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81971b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81972a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81972a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8197fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81900f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81900f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81901e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81901e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81902d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81902d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81903c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81903c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81904b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81904b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81905a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81905a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8190ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81910e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81910e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81911d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81911d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81912c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81912c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81913b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81913b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81914a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81914a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8191fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81920d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81920d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81921c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81921c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81922b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81922b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81923a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81923a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8192fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81930c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81930c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81931b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81931b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81932a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81932a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8193fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81780f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81780f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81781e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81781e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81782d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81782d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81783c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81783c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81784b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81784b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81785a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81785a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8178ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81790e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81790e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81791d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81791d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81792c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81792c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81793b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81793b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81794a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e81794a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e8179fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817a940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817aa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817aa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817ab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817ab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817ac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817ac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817ad00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817ad00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817adf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817adf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817aee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817aee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817afd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817afd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817b930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817ba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817ba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817bb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817bb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817bc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817bc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817bcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817bcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817bde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817bde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817bed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817bed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817bfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb9e817bfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c80f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c80f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c81e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c81e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c82d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c82d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c83c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c83c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c84b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c84b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c85a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c85a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c8ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c90e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c90e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c91d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c91d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c92c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c92c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c93b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c93b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c94a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c94a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c9fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9ca940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9caa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9caa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cad00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cad00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cadf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cadf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9caee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9caee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cafd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cafd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cb930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cbb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cbb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cbc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cbc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cbcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cbcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cbde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cbde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cbed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cbed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cbfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9cbfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c40f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c40f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c41e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c41e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c42d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c42d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c43c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c43c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c44b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c44b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c45a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c45a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c4ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c50e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c50e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c51d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c51d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c52c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c52c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c53b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c53b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c54a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c54a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c5fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c60d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c60d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c61c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c61c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c62b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c62b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c63a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c63a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c6fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c70c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c70c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c71b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c71b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c72a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c72a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c7fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c00f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c00f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c01e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c01e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c02d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c02d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c03c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c03c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c04b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c04b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c05a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c05a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c0ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c10e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c10e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c11d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c11d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c12c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c12c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c13b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c13b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c14a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c14a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c1fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c20d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c20d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c21c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c21c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c22b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c22b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c23a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c23a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c2fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c30c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c30c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c31b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c31b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c32a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c32a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9c3fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b40f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b40f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b41e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b41e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b42d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b42d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b43c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b43c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b44b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b44b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b45a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b45a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b4ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b50e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b50e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b51d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b51d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b52c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b52c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b53b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b53b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b54a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b54a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b5fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b60d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b60d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b61c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b61c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b62b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b62b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b63a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b63a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b6fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b70c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b70c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b71b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b71b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b72a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b72a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b7fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b00f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b00f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b01e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b01e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b02d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b02d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b03c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b03c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b04b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b04b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b05a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b05a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b0ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b10e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b10e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b11d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b11d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b12c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b12c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b13b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b13b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b14a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b14a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b1fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b20d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b20d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b21c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b21c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b22b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b22b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b23a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b23a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b2fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b30c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b30c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b31b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b31b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b32a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b32a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9b3fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9740f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9740f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9741e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9741e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9742d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9742d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9743c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9743c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9744b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9744b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9745a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9745a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e974ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9750e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9750e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9751d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9751d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9752c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9752c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9753b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9753b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9754a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9754a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e975fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9760d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9760d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9761c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9761c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9762b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9762b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9763a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9763a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e976fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9770c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9770c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9771b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9771b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9772a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9772a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e977fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a00f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a00f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a01e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a01e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a02d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a02d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a03c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a03c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a04b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a04b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a05a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a05a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a0ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a10e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a10e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a11d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a11d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a12c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a12c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a13b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a13b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a14a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a14a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a1fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a20d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a20d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a21c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a21c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a22b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a22b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a23a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a23a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a2fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a30c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a30c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a31b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a31b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a32a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a32a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9a3fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c0f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c0f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c1e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c1e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c2d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c2d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c3c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c3c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c4b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c4b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c5a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c5a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97c960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ca50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ca50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97cb40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97cb40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97cc30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97cc30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97cd20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97cd20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ce10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ce10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97cf00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97cf00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97cff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97cff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d0e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d0e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d1d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d1d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d2c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d2c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d3b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d3b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d4a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d4a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97d950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97da40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97da40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97db30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97db30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97dc20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97dc20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97dd10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97dd10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97de00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97de00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97def0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97def0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97dfe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97dfe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97e940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ea30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ea30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97eb20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97eb20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ec10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ec10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ed00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ed00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97edf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97edf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97eee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97eee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97efd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97efd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97f930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97fa20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97fa20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97fb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97fb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97fc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97fc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97fcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97fcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97fde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97fde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97fed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97fed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ffc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ffc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c0f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c0f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c1e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c1e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c2d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c2d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c3c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c3c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c4b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c4b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c5a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c5a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92c960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92ca50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92ca50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92cb40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92cb40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92cc30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92cc30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92cd20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92cd20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92ce10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92ce10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92cf00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92cf00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92cff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92cff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d0e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d0e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d1d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d1d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d2c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d2c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d3b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d3b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d4a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d4a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92d950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92da40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92da40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92db30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92db30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92dc20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92dc20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92dd10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92dd10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92de00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92de00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92def0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92def0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92dfe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92dfe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92e940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92ea30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92ea30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92eb20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92eb20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92ec10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92ec10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92ed00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92ed00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92edf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92edf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92eee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92eee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92efd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92efd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92f930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92fa20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92fa20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92fb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92fb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92fc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92fc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92fcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92fcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92fde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92fde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92fed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92fed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92ffc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e92ffc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9980f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9980f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9981e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9981e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9982d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9982d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9983c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9983c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9984b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9984b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9985a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9985a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e998ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9990e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9990e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9991d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9991d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9992c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9992c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9993b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9993b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9994a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9994a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e999fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99a940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99aa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99aa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99ab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99ab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99ac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99ac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99ad00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99ad00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99adf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99adf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99aee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99aee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99afd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99afd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99b930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99ba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99ba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99bb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99bb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99bc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99bc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99bcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99bcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99bde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99bde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99bed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99bed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99bfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e99bfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9900f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9900f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9901e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9901e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9902d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9902d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9903c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9903c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9904b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9904b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9905a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9905a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e990ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9910e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9910e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9911d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9911d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9912c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9912c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9913b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9913b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9914a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9914a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e991fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9920d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9920d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9921c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9921c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9922b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9922b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9923a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9923a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e992fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9930c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9930c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9931b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9931b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9932a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9932a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e993fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9840f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9840f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9841e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9841e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9842d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9842d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9843c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9843c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9844b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9844b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9845a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9845a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e984ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9850e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9850e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9851d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9851d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9852c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9852c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9853b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9853b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9854a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9854a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e985fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9860d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9860d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9861c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9861c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9862b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9862b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9863a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9863a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e986fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9870c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9870c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9871b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9871b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9872a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9872a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e987fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9780f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9780f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9781e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9781e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9782d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9782d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9783c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9783c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9784b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9784b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9785a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9785a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e978ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9790e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9790e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9791d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9791d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9792c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9792c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9793b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9793b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9794a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9794a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e979fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97a940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97aa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97aa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ad00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ad00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97adf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97adf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97aee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97aee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97afd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97afd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97b930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97ba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97bb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97bb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97bc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97bc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97bcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97bcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97bde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97bde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97bed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97bed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97bfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e97bfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c0f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c0f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c1e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c1e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c2d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c2d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c3c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c3c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c4b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c4b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c5a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c5a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94c960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ca50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ca50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94cb40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94cb40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94cc30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94cc30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94cd20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94cd20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ce10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ce10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94cf00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94cf00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94cff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94cff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d0e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d0e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d1d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d1d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d2c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d2c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d3b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d3b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d4a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d4a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94d950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94da40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94da40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94db30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94db30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94dc20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94dc20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94dd10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94dd10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94de00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94de00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94def0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94def0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94dfe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94dfe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94e940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ea30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ea30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94eb20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94eb20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ec10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ec10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ed00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ed00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94edf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94edf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94eee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94eee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94efd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94efd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94f930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94fa20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94fa20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94fb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94fb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94fc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94fc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94fcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94fcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94fde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94fde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94fed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94fed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ffc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ffc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c0f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c0f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c1e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c1e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c2d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c2d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c3c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c3c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c4b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c4b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c5a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c5a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90c960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90ca50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90ca50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90cb40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90cb40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90cc30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90cc30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90cd20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90cd20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90ce10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90ce10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90cf00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90cf00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90cff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90cff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d0e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d0e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d1d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d1d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d2c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d2c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d3b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d3b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d4a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d4a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90d950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90da40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90da40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90db30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90db30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90dc20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90dc20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90dd10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90dd10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90de00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90de00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90def0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90def0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90dfe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90dfe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90e940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90ea30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90ea30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90eb20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90eb20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90ec10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90ec10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90ed00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90ed00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90edf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90edf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90eee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90eee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90efd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90efd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90f930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90fa20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90fa20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90fb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90fb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90fc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90fc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90fcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90fcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90fde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90fde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90fed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90fed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90ffc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e90ffc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9640f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9640f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9641e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9641e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9642d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9642d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9643c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9643c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9644b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9644b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9645a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9645a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e964ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9650e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9650e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9651d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9651d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9652c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9652c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9653b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9653b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9654a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9654a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e965fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9660d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9660d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9661c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9661c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9662b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9662b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9663a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9663a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e966fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9670c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9670c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9671b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9671b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9672a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9672a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e967fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c0f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c0f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c1e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c1e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c2d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c2d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c3c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c3c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c4b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c4b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c5a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c5a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95c960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95ca50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95ca50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95cb40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95cb40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95cc30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95cc30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95cd20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95cd20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95ce10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95ce10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95cf00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95cf00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95cff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95cff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d0e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d0e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d1d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d1d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d2c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d2c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d3b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d3b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d4a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d4a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95d950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95da40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95da40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95db30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95db30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95dc20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95dc20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95dd10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95dd10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95de00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95de00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95def0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95def0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95dfe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95dfe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95e940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95ea30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95ea30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95eb20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95eb20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95ec10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95ec10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95ed00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95ed00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95edf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95edf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95eee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95eee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95efd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95efd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95f930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95fa20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95fa20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95fb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95fb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95fc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95fc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95fcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95fcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95fde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95fde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95fed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95fed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95ffc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e95ffc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9540f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9540f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9541e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9541e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9542d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9542d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9543c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9543c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9544b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9544b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9545a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9545a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e954ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9550e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9550e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9551d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9551d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9552c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9552c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9553b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9553b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9554a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9554a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e955fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9560d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9560d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9561c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9561c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9562b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9562b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9563a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9563a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e956fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9570c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9570c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9571b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9571b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9572a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9572a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e957fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9480f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9480f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9481e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9481e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9482d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9482d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9483c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9483c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9484b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9484b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9485a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9485a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e948ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9490e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9490e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9491d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9491d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9492c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9492c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9493b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9493b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9494a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9494a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e949fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94a940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94aa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94aa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ad00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ad00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94adf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94adf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94aee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94aee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94afd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94afd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94b930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94ba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94bb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94bb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94bc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94bc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94bcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94bcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94bde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94bde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94bed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94bed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94bfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e94bfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9440f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9440f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9441e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9441e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9442d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9442d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9443c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9443c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9444b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9444b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9445a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9445a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e944ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9450e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9450e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9451d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9451d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9452c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9452c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9453b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9453b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9454a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9454a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e945fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9460d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9460d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9461c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9461c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9462b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9462b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9463a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9463a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e946fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9470c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9470c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9471b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9471b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9472a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e9472a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e947fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc0f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc0f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc1e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc1e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc2d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc2d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc3c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc3c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc4b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc4b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc5a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc5a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fc960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fca50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fca50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fcb40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fcb40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fcc30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fcc30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fcd20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fcd20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fce10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fce10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fcf00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fcf00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fcff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fcff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd0e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd0e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd1d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd1d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd2c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd2c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd3b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd3b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd4a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd4a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fd950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fda40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fda40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fdb30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fdb30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fdc20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fdc20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fdd10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fdd10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fde00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fde00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fdef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fdef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fdfe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fdfe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fe940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fea30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fea30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8feb20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8feb20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fec10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fec10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fed00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fed00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fedf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fedf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8feee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8feee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fefd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fefd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ff930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ffa20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ffa20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ffb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ffb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ffc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ffc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ffcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ffcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ffde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ffde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ffed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8ffed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fffc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fba2e8fffc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c0f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c0f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c1e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c1e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c2d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c2d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c3c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c3c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c4b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c4b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c5a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c5a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3c960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3ca50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3ca50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3cb40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3cb40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3cc30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3cc30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3cd20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3cd20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3ce10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3ce10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3cf00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3cf00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3cff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3cff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d0e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d0e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d1d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d1d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d2c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d2c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d3b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d3b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d4a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d4a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3d950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3da40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3da40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3db30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3db30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3dc20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3dc20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3dd10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3dd10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3de00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3de00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3def0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3def0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3dfe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3dfe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3e940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3ea30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3ea30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3eb20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3eb20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3ec10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3ec10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3ed00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3ed00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3edf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3edf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3eee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3eee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3efd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3efd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3f930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3fa20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3fa20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3fb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3fb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3fc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3fc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3fcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3fcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3fde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3fde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3fed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3fed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3ffc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe3ffc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe340f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe340f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe341e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe341e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe342d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe342d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe343c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe343c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe344b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe344b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe345a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe345a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe34ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe350e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe350e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe351d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe351d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe352c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe352c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe353b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe353b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe354a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe354a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe35fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe360d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe360d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe361c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe361c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe362b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe362b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe363a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe363a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe36fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe370c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe370c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe371b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe371b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe372a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe372a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe37fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c0f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c0f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c1e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c1e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c2d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c2d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c3c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c3c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c4b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c4b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c5a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c5a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2c960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2ca50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2ca50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2cb40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2cb40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2cc30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2cc30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2cd20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2cd20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2ce10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2ce10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2cf00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2cf00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2cff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2cff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d0e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d0e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d1d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d1d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d2c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d2c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d3b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d3b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d4a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d4a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2d950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2da40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2da40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2db30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2db30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2dc20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2dc20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2dd10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2dd10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2de00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2de00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2def0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2def0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2dfe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2dfe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2e940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2ea30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2ea30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2eb20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2eb20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2ec10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2ec10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2ed00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2ed00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2edf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2edf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2eee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2eee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2efd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2efd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2f930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2fa20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2fa20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2fb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2fb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2fc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2fc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2fcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2fcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2fde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2fde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2fed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2fed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2ffc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe2ffc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd00f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd00f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd01e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd01e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd02d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd02d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd03c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd03c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd04b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd04b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd05a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd05a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd0ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd10e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd10e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd11d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd11d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd12c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd12c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd13b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd13b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd14a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd14a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd1fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd20d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd20d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd21c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd21c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd22b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd22b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd23a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd23a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd2fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd30c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd30c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd31b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd31b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd32a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd32a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd3fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe240f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe240f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe241e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe241e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe242d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe242d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe243c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe243c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe244b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe244b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe245a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe245a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe24ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe250e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe250e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe251d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe251d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe252c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe252c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe253b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe253b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe254a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe254a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe25fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe260d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe260d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe261c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe261c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe262b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe262b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe263a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe263a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe26fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe270c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe270c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe271b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe271b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe272a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe272a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe27fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf40f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf40f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf41e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf41e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf42d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf42d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf43c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf43c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf44b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf44b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf45a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf45a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf4ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf50e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf50e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf51d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf51d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf52c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf52c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf53b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf53b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf54a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf54a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf5fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf60d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf60d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf61c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf61c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf62b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf62b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf63a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf63a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf6fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf70c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf70c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf71b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf71b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf72a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf72a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdf7fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe200f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe200f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe201e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe201e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe202d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe202d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe203c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe203c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe204b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe204b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe205a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe205a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe20ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe210e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe210e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe211d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe211d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe212c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe212c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe213b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe213b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe214a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe214a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe21fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe220d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe220d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe221c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe221c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe222b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe222b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe223a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe223a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe22fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe230c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe230c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe231b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe231b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe232a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe232a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe23fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde40f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde40f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde41e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde41e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde42d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde42d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde43c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde43c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde44b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde44b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde45a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde45a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde4ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde50e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde50e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde51d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde51d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde52c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde52c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde53b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde53b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde54a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde54a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde5fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde60d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde60d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde61c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde61c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde62b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde62b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde63a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde63a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde6fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde70c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde70c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde71b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde71b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde72a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde72a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde7fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde80f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde80f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde81e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde81e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde82d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde82d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde83c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde83c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde84b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde84b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde85a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde85a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde8ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde90e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde90e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde91d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde91d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde92c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde92c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde93b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde93b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde94a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde94a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fde9fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdea940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeaa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeaa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdead00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdead00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeadf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeadf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeaee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeaee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeafd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeafd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeb930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdeba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdebb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdebb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdebc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdebc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdebcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdebcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdebde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdebde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdebed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdebed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdebfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdebfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc0f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc0f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc1e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc1e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc2d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc2d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc3c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc3c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc4b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc4b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc5a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc5a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddc960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddca50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddca50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddcb40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddcb40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddcc30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddcc30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddcd20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddcd20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddce10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddce10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddcf00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddcf00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddcff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddcff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd0e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd0e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd1d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd1d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd2c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd2c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd3b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd3b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd4a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd4a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddd950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddda40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddda40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdddb30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdddb30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdddc20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdddc20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdddd10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdddd10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddde00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddde00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdddef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdddef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdddfe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdddfe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdde940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddea30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddea30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddeb20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddeb20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddec10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddec10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdded00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdded00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddedf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddedf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddeee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddeee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddefd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddefd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddf930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddfa20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddfa20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddfb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddfb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddfc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddfc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddfcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddfcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddfde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddfde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddfed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddfed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddffc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddffc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd80f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd80f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd81e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd81e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd82d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd82d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd83c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd83c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd84b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd84b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd85a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd85a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd8ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd90e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd90e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd91d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd91d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd92c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd92c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd93b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd93b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd94a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd94a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd9fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdda940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddaa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddaa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddad00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddad00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddadf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddadf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddaee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddaee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddafd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddafd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddb930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddbb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddbb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddbc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddbc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddbcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddbcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddbde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddbde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddbed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddbed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddbfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fddbfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd40f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd40f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd41e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd41e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd42d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd42d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd43c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd43c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd44b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd44b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd45a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd45a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd4ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd50e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd50e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd51d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd51d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd52c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd52c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd53b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd53b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd54a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd54a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd5fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd60d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd60d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd61c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd61c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd62b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd62b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd63a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd63a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd6fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd70c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd70c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd71b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd71b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd72a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd72a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdd7fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc80f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc80f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc81e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc81e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc82d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc82d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc83c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc83c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc84b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc84b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc85a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc85a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc8ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc90e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc90e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc91d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc91d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc92c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc92c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc93b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc93b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc94a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc94a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc9fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdca940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcaa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcaa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcad00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcad00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcadf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcadf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcaee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcaee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcafd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcafd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcb930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcbb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcbb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcbc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcbc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcbcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcbcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcbde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcbde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcbed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcbed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcbfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdcbfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc40f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc40f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc41e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc41e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc42d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc42d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc43c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc43c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc44b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc44b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc45a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc45a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc4ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc50e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc50e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc51d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc51d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc52c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc52c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc53b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc53b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc54a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc54a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc5fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc60d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc60d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc61c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc61c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc62b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc62b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc63a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc63a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc6fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc70c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc70c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc71b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc71b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc72a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc72a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7a20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7b10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7b10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7c00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7c00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7cf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7cf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7de0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7de0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7ed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7ed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7fc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdc7fc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc0f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc0f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc1e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc1e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc2d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc2d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc3c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc3c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc4b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc4b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc5a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc5a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbc960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbca50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbca50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbcb40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbcb40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbcc30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbcc30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbcd20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbcd20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbce10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbce10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbcf00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbcf00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbcff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbcff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd0e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd0e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd1d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd1d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd2c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd2c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd3b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd3b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd4a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd4a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbd950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbda40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbda40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbdb30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbdb30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbdc20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbdc20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbdd10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbdd10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbde00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbde00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbdef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbdef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbdfe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbdfe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbe940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbea30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbea30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbeb20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbeb20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbec10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbec10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbed00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbed00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbedf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbedf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbeee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbeee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbefd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbefd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbf930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbfa20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbfa20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbfb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbfb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbfc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbfc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbfcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbfcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbfde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbfde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbfed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbfed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbffc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbffc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb80f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb80f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb81e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb81e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb82d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb82d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb83c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb83c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb84b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb84b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb85a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb85a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb8ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb90e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb90e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb91d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb91d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb92c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb92c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb93b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb93b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb94a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb94a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdb9fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdba940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbaa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbaa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbad00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbad00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbadf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbadf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbaee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbaee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbafd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbafd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbb930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbbb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbbb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbbc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbbc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbbcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbbcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbbde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbbde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbbed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbbed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbbfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fdbbfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe780f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe780f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe781e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe781e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe782d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe782d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe783c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe783c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe784b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe784b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe785a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe785a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe78ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe790e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe790e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe791d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe791d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe792c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe792c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe793b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe793b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe794a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe794a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe79fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a0d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a0d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a1c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a1c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a2b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a2b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a3a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a3a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7a940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7aa30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7aa30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7ab20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7ab20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7ac10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7ac10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7ad00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7ad00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7adf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7adf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7aee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7aee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7afd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7afd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b0c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b0c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b1b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b1b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b2a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b2a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7b930> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7ba20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7ba20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7bb10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7bb10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7bc00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7bc00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7bcf0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7bcf0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7bde0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7bde0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7bed0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7bed0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7bfc0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe7bfc0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe700f0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe700f0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe701e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe701e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe702d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe702d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe703c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe703c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe704b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe704b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe705a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe705a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70690> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70690> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70780> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70780> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70870> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70870> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70960> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70960> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70a50> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70a50> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70b40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70b40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70c30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70c30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70d20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70d20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70e10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70e10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70f00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70f00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70ff0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe70ff0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe710e0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe710e0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe711d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe711d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe712c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe712c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe713b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe713b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe714a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe714a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71590> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71590> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71680> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71680> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71770> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71770> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71860> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71860> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71950> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71950> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71a40> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71a40> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71b30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71b30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71c20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71c20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71d10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71d10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71e00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71e00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71ef0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71ef0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71fe0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe71fe0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe720d0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe720d0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe721c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe721c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe722b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe722b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe723a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe723a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72490> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72490> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72580> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72580> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72670> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72670> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72760> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72760> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72850> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72850> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72940> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72940> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72a30> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72a30> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72b20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72b20> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72c10> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72c10> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72d00> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72d00> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72df0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72df0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72ee0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72ee0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72fd0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe72fd0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe730c0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe730c0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe731b0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe731b0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe732a0> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe732a0> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73390> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73390> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73480> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73480> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73570> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73570> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73660> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73660> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73750> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73750> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73840> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73840> >
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73930> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73930> >
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 381, in main
    k_means_module = KMeans.KMeansModule(nb_classes, dimensionality=256, k_range=K_range, resources=res, config=cfg)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 80, in __init__
    print(self.n_kmeans[0][0].index.setDevice())
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'GpuIndexFlat' object has no attribute 'setDevice'. Did you mean: 'getDevice'?
Flat Index: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73a20> >
Flat Index after: <faiss.swigfaiss_avx2.IndexFlatL2; proxy of <Swig Object of type 'faiss::IndexFlatL2 *' at 0x7fb91fe73a20> >
<faiss.swigfaiss_avx2.GpuResources; proxy of <Swig Object of type 'std::shared_ptr< faiss::gpu::GpuResources > *' at 0x7fba2ea61fe0> >
0
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 503, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 443, in train_step
    k_means_loss, k_means_assignments = k_means_module.assign(bottleneck_output, targets, device, cached_features_last_iter)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 135, in assign
    for k in range(len(self.k_range)):
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/extra_wrappers.py", line 544, in train
    x = np.ascontiguousarray(x, dtype='float32')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor.py", line 1089, in __array__
    return self.numpy().astype(dtype, copy=False)
           ^^^^^^^^^^^^
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 503, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 443, in train_step
    k_means_loss, k_means_assignments = k_means_module.assign(bottleneck_output, targets, device, cached_features_last_iter)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 136, in assign
    self.n_kmeans[y[i]][k].train(batch_x)
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/extra_wrappers.py", line 544, in train
    x = np.ascontiguousarray(x, dtype='float32')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor.py", line 1089, in __array__
    return self.numpy().astype(dtype, copy=False)
           ^^^^^^^^^^^^
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Traceback (most recent call last):
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 16, in <module>
    from engine_deeper_cluster import main as app_main
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 64, in <module>
    from src import KMeans
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 3, in <module>
    import faiss
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/__init__.py", line 22, in <module>
    from faiss.extra_wrappers import kmin, kmax, pairwise_distances, rand, randint, \
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/extra_wrappers.py", line 19, in <module>
    import faiss.contrib.torch_utils
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py", line 493, in <module>
    handle_torch_Index(the_class)
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py", line 469, in handle_torch_Index
    torch_replace_method(the_class, 'add', torch_replacement_add)
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py", line 106, in torch_replace_method
    assert ignore_no_base or (orig_method.__name__ == 'replacement_' + name)
AssertionError
srun: error: hgx: task 0: Exited with exit code 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Traceback (most recent call last):
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 16, in <module>
    from engine_deeper_cluster import main as app_main
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 64, in <module>
    from src import KMeans
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 3, in <module>
    import faiss
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/__init__.py", line 22, in <module>
    from faiss.extra_wrappers import kmin, kmax, pairwise_distances, rand, randint, \
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/extra_wrappers.py", line 19, in <module>
    import contrib.torch_utils
ModuleNotFoundError: No module named 'contrib'
srun: error: hgx: task 0: Exited with exit code 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Traceback (most recent call last):
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 16, in <module>
    from engine_deeper_cluster import main as app_main
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 64, in <module>
    from src import KMeans
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 3, in <module>
    import faiss
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/__init__.py", line 22, in <module>
    from faiss.extra_wrappers import kmin, kmax, pairwise_distances, rand, randint, \
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/extra_wrappers.py", line 19
    from faiss import contrib.torch_utils
                             ^
SyntaxError: invalid syntax
srun: error: hgx: task 0: Exited with exit code 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Traceback (most recent call last):
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 16, in <module>
    from engine_deeper_cluster import main as app_main
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 64, in <module>
    from src import KMeans
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 3, in <module>
    import faiss
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/__init__.py", line 22, in <module>
    from faiss.extra_wrappers import kmin, kmax, pairwise_distances, rand, randint, \
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/extra_wrappers.py", line 19, in <module>
    import faiss.contrib.torch_utils
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py", line 493, in <module>
    handle_torch_Index(the_class)
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py", line 469, in handle_torch_Index
    torch_replace_method(the_class, 'add', torch_replacement_add)
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py", line 106, in torch_replace_method
    assert ignore_no_base or (orig_method.__name__ == 'replacement_' + name)
AssertionError
srun: error: hgx: task 0: Exited with exit code 1
Traceback (most recent call last):
  File "main_deeper_cluster.py", line 15, in <module>
    from src.utils.distributed import init_distributed
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/distributed.py", line 10, in <module>
    import torch
  File "/home/rtcalumby/miniconda3/lib/python3.8/site-packages/torch/__init__.py", line 229, in <module>
    from torch._C import *  # noqa: F403
ImportError: libcupti.so.11.7: cannot open shared object file: No such file or directory
srun: error: hgx: task 0: Exited with exit code 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 503, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 443, in train_step
    k_means_loss, k_means_assignments = k_means_module.assign(bottleneck_output, targets, device, cached_features_last_iter)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 136, in assign
    initialize_centroids(batch_x, y[i])
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 118, in initialize_centroids
    batch_x = augment(batch_x, self.k_range[len(self.k_range)-1]) # Create additional synthetic points to meet the minimum requirement for the number of clusters.
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 112, in augment
    augmented_data[i] += sign * eps
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 503, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 443, in train_step
    k_means_loss, k_means_assignments = k_means_module.assign(bottleneck_output, targets, rank, device, cached_features_last_iter)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 136, in assign
    initialize_centroids(batch_x, y[i])
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 118, in initialize_centroids
    batch_x = augment(batch_x, self.k_range[len(self.k_range)-1]) # Create additional synthetic points to meet the minimum requirement for the number of clusters.
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 112, in augment
    augmented_data[i] += sign * eps
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 503, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 443, in train_step
    k_means_loss, k_means_assignments = k_means_module.assign(bottleneck_output, targets, rank, device, cached_features_last_iter)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 137, in assign
    initialize_centroids(batch_x, y[i])
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 119, in initialize_centroids
    batch_x = augment(batch_x, self.k_range[len(self.k_range)-1]) # Create additional synthetic points to meet the minimum requirement for the number of clusters.
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 113, in augment
    augmented_data[i] += sign * eps
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!
tensor([-1., -1., -1., -1.,  1., -1., -1., -1.,  1., -1.,  1., -1.,  0.,  0.,
         0.,  1., -1.,  1.,  0.,  0.,  0.,  1., -1., -1.,  1., -1., -1.,  1.,
         1.,  1.,  1., -1., -1.,  1.,  0.,  0., -1.,  1.,  0.,  1.,  1.,  1.,
        -1.,  0.,  1.,  0.,  1., -1., -1., -1., -1.,  1., -1.,  1., -1., -1.,
        -1.,  1.,  1.,  1.,  1.,  0.,  1., -1.,  0., -1.,  0., -1.,  0.,  0.,
        -1.,  0., -1., -1., -1.,  1., -1.,  0.,  1.,  0., -1.,  1.,  0.,  0.,
        -1.,  0.,  0.,  1., -1., -1.,  1.,  1.,  1.,  0.,  1., -1.,  1., -1.,
         0.,  1.,  0.,  1.,  0.,  1.,  1., -1., -1.,  0.,  1.,  1.,  0.,  1.,
         0.,  0.,  0.,  0.,  0., -1., -1.,  0., -1.,  1.,  0.,  1.,  0.,  1.,
         1.,  1., -1., -1.,  1., -1., -1.,  0.,  1., -1.,  0., -1., -1., -1.,
         1.,  1., -1., -1.,  0.,  1., -1., -1.,  1.,  1.,  0., -1.,  0.,  0.,
         1.,  0., -1.,  1., -1., -1., -1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,
         0.,  1.,  1.,  1., -1., -1., -1.,  0.,  1.,  1.,  1.,  0., -1.,  1.,
        -1.,  1.,  0.,  1.,  0., -1.,  0.,  0., -1.,  0., -1.,  0.,  1., -1.,
        -1.,  1.,  1., -1.,  1., -1., -1.,  0.,  1.,  0.,  1.,  0.,  1.,  1.,
         1., -1.,  1., -1.,  0.,  0.,  0.,  1., -1.,  0.,  1., -1.,  0.,  1.,
        -1., -1.,  1.,  0., -1.,  0., -1., -1.,  1., -1., -1.,  0.,  1.,  0.,
         1.,  1., -1.,  0.,  1., -1.,  0.,  1.,  1., -1.,  1.,  0.,  0., -1.,
         1.,  1.,  0.,  1.]) tensor(1.0000e-07) tensor([[-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903]],
       device='cuda:0', grad_fn=<RepeatBackward0>)
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 503, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 443, in train_step
    k_means_loss, k_means_assignments = k_means_module.assign(bottleneck_output, targets, rank, device, cached_features_last_iter)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 138, in assign
    initialize_centroids(batch_x, y[i])
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 120, in initialize_centroids
    batch_x = augment(batch_x, self.k_range[len(self.k_range)-1]) # Create additional synthetic points to meet the minimum requirement for the number of clusters.
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 114, in augment
    augmented_data[i] += sign * eps
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!
Device: None
tensor([-1., -1., -1., -1.,  1., -1., -1., -1.,  1., -1.,  1., -1.,  0.,  0.,
         0.,  1., -1.,  1.,  0.,  0.,  0.,  1., -1., -1.,  1., -1., -1.,  1.,
         1.,  1.,  1., -1., -1.,  1.,  0.,  0., -1.,  1.,  0.,  1.,  1.,  1.,
        -1.,  0.,  1.,  0.,  1., -1., -1., -1., -1.,  1., -1.,  1., -1., -1.,
        -1.,  1.,  1.,  1.,  1.,  0.,  1., -1.,  0., -1.,  0., -1.,  0.,  0.,
        -1.,  0., -1., -1., -1.,  1., -1.,  0.,  1.,  0., -1.,  1.,  0.,  0.,
        -1.,  0.,  0.,  1., -1., -1.,  1.,  1.,  1.,  0.,  1., -1.,  1., -1.,
         0.,  1.,  0.,  1.,  0.,  1.,  1., -1., -1.,  0.,  1.,  1.,  0.,  1.,
         0.,  0.,  0.,  0.,  0., -1., -1.,  0., -1.,  1.,  0.,  1.,  0.,  1.,
         1.,  1., -1., -1.,  1., -1., -1.,  0.,  1., -1.,  0., -1., -1., -1.,
         1.,  1., -1., -1.,  0.,  1., -1., -1.,  1.,  1.,  0., -1.,  0.,  0.,
         1.,  0., -1.,  1., -1., -1., -1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,
         0.,  1.,  1.,  1., -1., -1., -1.,  0.,  1.,  1.,  1.,  0., -1.,  1.,
        -1.,  1.,  0.,  1.,  0., -1.,  0.,  0., -1.,  0., -1.,  0.,  1., -1.,
        -1.,  1.,  1., -1.,  1., -1., -1.,  0.,  1.,  0.,  1.,  0.,  1.,  1.,
         1., -1.,  1., -1.,  0.,  0.,  0.,  1., -1.,  0.,  1., -1.,  0.,  1.,
        -1., -1.,  1.,  0., -1.,  0., -1., -1.,  1., -1., -1.,  0.,  1.,  0.,
         1.,  1., -1.,  0.,  1., -1.,  0.,  1.,  1., -1.,  1.,  0.,  0., -1.,
         1.,  1.,  0.,  1.]) tensor(1.0000e-07) tensor([[-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903]],
       device='cuda:0', grad_fn=<RepeatBackward0>)
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 504, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 444, in train_step
    k_means_loss, k_means_assignments = k_means_module.assign(bottleneck_output, targets, rank, device, cached_features_last_iter)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 138, in assign
    initialize_centroids(batch_x, y[i])
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 120, in initialize_centroids
    batch_x = augment(batch_x, self.k_range[len(self.k_range)-1]) # Create additional synthetic points to meet the minimum requirement for the number of clusters.
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 114, in augment
    augmented_data[i] += sign * eps
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!
GPU DEVICE: cuda:0
Device: None
tensor([-1., -1., -1., -1.,  1., -1., -1., -1.,  1., -1.,  1., -1.,  0.,  0.,
         0.,  1., -1.,  1.,  0.,  0.,  0.,  1., -1., -1.,  1., -1., -1.,  1.,
         1.,  1.,  1., -1., -1.,  1.,  0.,  0., -1.,  1.,  0.,  1.,  1.,  1.,
        -1.,  0.,  1.,  0.,  1., -1., -1., -1., -1.,  1., -1.,  1., -1., -1.,
        -1.,  1.,  1.,  1.,  1.,  0.,  1., -1.,  0., -1.,  0., -1.,  0.,  0.,
        -1.,  0., -1., -1., -1.,  1., -1.,  0.,  1.,  0., -1.,  1.,  0.,  0.,
        -1.,  0.,  0.,  1., -1., -1.,  1.,  1.,  1.,  0.,  1., -1.,  1., -1.,
         0.,  1.,  0.,  1.,  0.,  1.,  1., -1., -1.,  0.,  1.,  1.,  0.,  1.,
         0.,  0.,  0.,  0.,  0., -1., -1.,  0., -1.,  1.,  0.,  1.,  0.,  1.,
         1.,  1., -1., -1.,  1., -1., -1.,  0.,  1., -1.,  0., -1., -1., -1.,
         1.,  1., -1., -1.,  0.,  1., -1., -1.,  1.,  1.,  0., -1.,  0.,  0.,
         1.,  0., -1.,  1., -1., -1., -1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,
         0.,  1.,  1.,  1., -1., -1., -1.,  0.,  1.,  1.,  1.,  0., -1.,  1.,
        -1.,  1.,  0.,  1.,  0., -1.,  0.,  0., -1.,  0., -1.,  0.,  1., -1.,
        -1.,  1.,  1., -1.,  1., -1., -1.,  0.,  1.,  0.,  1.,  0.,  1.,  1.,
         1., -1.,  1., -1.,  0.,  0.,  0.,  1., -1.,  0.,  1., -1.,  0.,  1.,
        -1., -1.,  1.,  0., -1.,  0., -1., -1.,  1., -1., -1.,  0.,  1.,  0.,
         1.,  1., -1.,  0.,  1., -1.,  0.,  1.,  1., -1.,  1.,  0.,  0., -1.,
         1.,  1.,  0.,  1.]) tensor(1.0000e-07) tensor([[-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903]],
       device='cuda:0', grad_fn=<RepeatBackward0>)
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
tensor([-1., -1., -1., -1.,  1., -1., -1., -1.,  1., -1.,  1., -1.,  0.,  0.,
         0.,  1., -1.,  1.,  0.,  0.,  0.,  1., -1., -1.,  1., -1., -1.,  1.,
         1.,  1.,  1., -1., -1.,  1.,  0.,  0., -1.,  1.,  0.,  1.,  1.,  1.,
        -1.,  0.,  1.,  0.,  1., -1., -1., -1., -1.,  1., -1.,  1., -1., -1.,
        -1.,  1.,  1.,  1.,  1.,  0.,  1., -1.,  0., -1.,  0., -1.,  0.,  0.,
        -1.,  0., -1., -1., -1.,  1., -1.,  0.,  1.,  0., -1.,  1.,  0.,  0.,
        -1.,  0.,  0.,  1., -1., -1.,  1.,  1.,  1.,  0.,  1., -1.,  1., -1.,
         0.,  1.,  0.,  1.,  0.,  1.,  1., -1., -1.,  0.,  1.,  1.,  0.,  1.,
         0.,  0.,  0.,  0.,  0., -1., -1.,  0., -1.,  1.,  0.,  1.,  0.,  1.,
         1.,  1., -1., -1.,  1., -1., -1.,  0.,  1., -1.,  0., -1., -1., -1.,
         1.,  1., -1., -1.,  0.,  1., -1., -1.,  1.,  1.,  0., -1.,  0.,  0.,
         1.,  0., -1.,  1., -1., -1., -1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,
         0.,  1.,  1.,  1., -1., -1., -1.,  0.,  1.,  1.,  1.,  0., -1.,  1.,
        -1.,  1.,  0.,  1.,  0., -1.,  0.,  0., -1.,  0., -1.,  0.,  1., -1.,
        -1.,  1.,  1., -1.,  1., -1., -1.,  0.,  1.,  0.,  1.,  0.,  1.,  1.,
         1., -1.,  1., -1.,  0.,  0.,  0.,  1., -1.,  0.,  1., -1.,  0.,  1.,
        -1., -1.,  1.,  0., -1.,  0., -1., -1.,  1., -1., -1.,  0.,  1.,  0.,
         1.,  1., -1.,  0.,  1., -1.,  0.,  1.,  1., -1.,  1.,  0.,  0., -1.,
         1.,  1.,  0.,  1.], device='cuda:0') tensor(1.0000e-07, device='cuda:0') tensor([[-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903]],
       device='cuda:0', grad_fn=<RepeatBackward0>)
tensor([-1., -1., -1., -1.,  1.,  0.,  1.,  0., -1.,  0.,  0.,  1.,  1., -1.,
        -1., -1., -1.,  1.,  0.,  0.,  0.,  0.,  1.,  1.,  1., -1., -1., -1.,
        -1., -1.,  0.,  0.,  1., -1.,  1.,  1., -1.,  0.,  1.,  1.,  1.,  0.,
        -1.,  1., -1.,  1.,  0.,  1.,  0.,  0., -1., -1.,  1., -1., -1., -1.,
         0.,  0.,  0., -1.,  1.,  1., -1.,  1., -1., -1., -1.,  0., -1.,  0.,
         1.,  1., -1.,  0.,  1.,  0.,  0., -1.,  1.,  0., -1., -1.,  1.,  0.,
         0.,  1.,  0.,  1., -1., -1.,  0.,  1.,  1.,  1., -1., -1.,  0.,  0.,
        -1.,  1.,  1.,  0., -1., -1., -1.,  0.,  1.,  0., -1., -1.,  1.,  1.,
         0.,  1.,  1.,  1.,  0.,  1., -1., -1.,  1., -1., -1., -1.,  1., -1.,
         0.,  1.,  1.,  0., -1.,  1.,  1.,  0.,  0.,  0.,  1.,  0.,  0.,  1.,
         0.,  1.,  0.,  0., -1.,  0., -1., -1., -1.,  1.,  0.,  0.,  0.,  1.,
        -1.,  1.,  0.,  1.,  0., -1.,  0.,  0.,  1.,  0.,  1.,  1.,  0.,  0.,
         1., -1., -1.,  0., -1., -1.,  1.,  1., -1., -1.,  1.,  0.,  0.,  0.,
         0., -1.,  0.,  1., -1.,  0.,  1.,  1., -1., -1.,  0.,  0.,  0.,  1.,
        -1.,  1.,  0.,  1.,  0.,  1.,  1.,  1., -1.,  0., -1.,  0.,  1.,  0.,
        -1.,  0., -1.,  1., -1.,  0., -1.,  1., -1.,  1.,  0., -1.,  1., -1.,
        -1.,  1., -1.,  0.,  1.,  0.,  0.,  1.,  0.,  1.,  0.,  0.,  1.,  0.,
         0.,  1., -1., -1.,  0., -1., -1.,  1.,  0.,  0.,  0.,  1.,  0.,  0.,
         1.,  1., -1.,  0.], device='cuda:0') tensor(1.0000e-07, device='cuda:0') tensor([[-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903]],
       device='cuda:0', grad_fn=<CopySlices>)
tensor([-1., -1., -1.,  1.,  1.,  0.,  1.,  0.,  0.,  0.,  1.,  1., -1.,  1.,
        -1.,  0.,  1.,  0.,  1., -1.,  1.,  1.,  0., -1., -1., -1.,  0.,  1.,
         0.,  0., -1., -1., -1.,  0., -1.,  1.,  1., -1.,  0., -1.,  0.,  1.,
         0., -1.,  1.,  1., -1.,  0.,  1.,  1.,  1.,  1.,  1.,  1.,  0.,  0.,
         1.,  1.,  1.,  0.,  0.,  0., -1.,  1., -1.,  1.,  0.,  0.,  1.,  0.,
        -1.,  0., -1.,  1., -1.,  0., -1.,  1.,  0., -1.,  1.,  1., -1.,  0.,
        -1.,  0.,  0.,  0.,  0.,  1.,  1., -1.,  0.,  0., -1., -1., -1., -1.,
         1.,  0.,  1.,  0.,  1.,  1.,  0.,  0.,  1.,  0., -1., -1., -1.,  0.,
        -1.,  1., -1.,  1.,  0.,  1.,  1.,  0.,  0., -1.,  1.,  0., -1., -1.,
         1., -1., -1., -1., -1.,  1.,  0., -1.,  1.,  1., -1., -1., -1., -1.,
         1., -1.,  1.,  1., -1.,  0.,  0., -1., -1.,  0.,  1.,  0., -1.,  1.,
         1.,  0., -1., -1.,  1.,  1., -1., -1., -1., -1., -1.,  0.,  1., -1.,
        -1., -1.,  1.,  1.,  0.,  1.,  0.,  1.,  1., -1., -1.,  0.,  1., -1.,
        -1.,  0.,  0., -1., -1., -1., -1.,  1., -1.,  0.,  0.,  1.,  1., -1.,
         0.,  0., -1.,  1.,  0.,  1.,  1.,  1., -1.,  1.,  1.,  0.,  1., -1.,
         1.,  1.,  0.,  1.,  0.,  1., -1., -1., -1.,  0., -1.,  0., -1.,  1.,
         1., -1., -1.,  0.,  1.,  1., -1.,  1., -1., -1.,  1.,  1.,  0., -1.,
         0., -1.,  0.,  0.,  1.,  0.,  1., -1.,  1.,  1., -1.,  1.,  0.,  1.,
         1.,  0.,  1., -1.], device='cuda:0') tensor(1.0000e-07, device='cuda:0') tensor([[-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903]],
       device='cuda:0', grad_fn=<CopySlices>)
tensor([ 1., -1.,  0.,  1., -1.,  0., -1.,  0.,  1.,  0.,  0., -1.,  1.,  0.,
        -1.,  1., -1., -1., -1.,  1., -1., -1., -1., -1., -1.,  0.,  0., -1.,
        -1., -1.,  0., -1.,  1., -1.,  0.,  1.,  1.,  0.,  0., -1., -1.,  1.,
         1.,  1.,  0., -1.,  1.,  0.,  1.,  0.,  1., -1.,  0.,  0.,  1.,  1.,
         0.,  1.,  1.,  1., -1., -1., -1.,  0.,  1.,  1.,  1., -1.,  1., -1.,
         0., -1.,  0.,  1., -1.,  1.,  1.,  0.,  1.,  1., -1.,  0., -1., -1.,
        -1.,  1., -1., -1., -1.,  0.,  0.,  1., -1.,  1.,  1., -1., -1., -1.,
         1., -1., -1., -1.,  1.,  0.,  1.,  1., -1.,  0.,  1., -1.,  1., -1.,
        -1.,  1.,  1.,  0., -1.,  1., -1., -1., -1.,  1., -1., -1., -1.,  1.,
         1.,  0., -1.,  0., -1.,  0., -1.,  1., -1.,  0., -1.,  0.,  0.,  0.,
        -1.,  0.,  0.,  1.,  0.,  0.,  1., -1.,  0.,  0.,  1., -1., -1., -1.,
        -1.,  1., -1., -1.,  0.,  1., -1.,  0., -1.,  0.,  0.,  1., -1.,  1.,
        -1.,  0.,  1.,  1.,  1.,  0.,  0., -1.,  1.,  0., -1.,  0.,  1.,  1.,
        -1.,  0., -1., -1.,  0.,  1.,  0.,  1., -1.,  1.,  0.,  0.,  0.,  0.,
         1.,  0.,  1.,  1.,  1., -1.,  1.,  1.,  1., -1.,  0.,  0., -1.,  0.,
         1.,  0., -1.,  0.,  0.,  1.,  1., -1., -1.,  0.,  1.,  0.,  1.,  1.,
         0., -1., -1., -1.,  0.,  1., -1.,  1., -1., -1., -1.,  0., -1., -1.,
        -1.,  0.,  0.,  1.,  1.,  1.,  1.,  0., -1., -1.,  0., -1.,  1.,  1.,
         0., -1.,  0., -1.], device='cuda:0') tensor(1.0000e-07, device='cuda:0') tensor([[-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903]],
       device='cuda:0', grad_fn=<CopySlices>)
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 503, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 443, in train_step
    k_means_loss, k_means_assignments = k_means_module.assign(x=bottleneck_output, y=targets, resources=res, rank=rank, device=device, cached_features=cached_features_last_iter)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 137, in assign
    print('Has been initialized?', self.n_kmeans[y[i]][0].centroids)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 124, in initialize_centroids
    # Replace the index by a gpu one
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/extra_wrappers.py", line 546, in train
    x = np.ascontiguousarray(x, dtype='float32')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor.py", line 1089, in __array__
    return self.numpy().astype(dtype, copy=False)
           ^^^^^^^^^^^^
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
tensor([ 0.,  0.,  0.,  1.,  0.,  1.,  0., -1., -1.,  0.,  1.,  1.,  1.,  1.,
         1.,  0., -1.,  0.,  0.,  1., -1.,  0.,  1.,  1.,  0., -1.,  1.,  1.,
        -1., -1.,  0., -1.,  0.,  1.,  0.,  1.,  1., -1.,  1., -1., -1.,  0.,
         1.,  1.,  0., -1.,  1.,  0.,  1., -1.,  1.,  0.,  0.,  0., -1., -1.,
         0.,  1., -1.,  0.,  1., -1.,  0., -1., -1., -1.,  0.,  1., -1., -1.,
         0., -1.,  0., -1., -1., -1., -1.,  1., -1.,  0.,  0.,  0., -1., -1.,
        -1.,  0.,  1.,  0.,  1.,  1.,  1., -1.,  0.,  1.,  1.,  1.,  1., -1.,
        -1.,  0.,  0.,  0.,  1.,  1.,  0.,  0., -1.,  1.,  0.,  0.,  1., -1.,
         1., -1., -1.,  0.,  0.,  0., -1.,  0.,  0., -1.,  0.,  0.,  1.,  0.,
        -1.,  1.,  1.,  0., -1.,  1.,  0.,  0.,  1., -1., -1.,  1.,  1.,  1.,
         0.,  1.,  0.,  0., -1.,  1.,  0.,  0., -1.,  1.,  0.,  1., -1.,  0.,
        -1.,  1.,  1., -1., -1., -1.,  1.,  0.,  1.,  1.,  0., -1.,  1., -1.,
         1.,  1.,  0.,  0., -1.,  1.,  0.,  1.,  0., -1.,  1., -1.,  1.,  0.,
         0., -1., -1.,  0.,  1.,  0.,  0., -1., -1., -1.,  1.,  1.,  0., -1.,
         0., -1.,  1.,  0., -1.,  0.,  0.,  1.,  0.,  1.,  0.,  0., -1., -1.,
         0.,  0., -1., -1.,  1.,  1.,  1., -1.,  0., -1., -1.,  0.,  0.,  0.,
         0., -1.,  1.,  1., -1.,  0., -1., -1.,  0., -1., -1.,  0., -1.,  0.,
         0.,  1.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0., -1.,
        -1.,  0.,  1.,  1.], device='cuda:0') tensor(1.0000e-07, device='cuda:0') tensor([[-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903],
        [-0.1958, -0.4467,  0.3942,  ...,  0.8007, -0.8811,  1.7903]],
       device='cuda:0', grad_fn=<CopySlices>)
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 503, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 443, in train_step
    k_means_loss, k_means_assignments = k_means_module.assign(x=bottleneck_output, y=targets, resources=res, rank=rank, device=device, cached_features=cached_features_last_iter)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 136, in assign
    if self.n_kmeans[y[i]][0].centroids is None:
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 123, in initialize_centroids
    for k in range(len(self.k_range)):
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/extra_wrappers.py", line 546, in train
    x = np.ascontiguousarray(x, dtype='float32')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor.py", line 1089, in __array__
    return self.numpy().astype(dtype, copy=False)
           ^^^^^^^^^^^^
RuntimeError: Can't call numpy() on Tensor that requires grad. Use tensor.detach().numpy() instead.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 503, in main
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 443, in train_step
    k_means_loss, k_means_assignments = k_means_module.assign(x=bottleneck_output, y=targets, resources=res, rank=rank, device=device, cached_features=cached_features_last_iter)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 137, in assign
    initialize_centroids(batch_x, y[i])
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 124, in initialize_centroids
    self.n_kmeans[class_id][k].train(batch_x.detach()) # Then train K-means model for one iteration to initialize centroids
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/extra_wrappers.py", line 546, in train
    x = np.ascontiguousarray(x, dtype='float32')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor.py", line 1089, in __array__
    return self.numpy().astype(dtype, copy=False)
           ^^^^^^^^^^^^
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=0 imbalance=1.360 nsplit=0       
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 506, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 443, in train_step
    k_means_loss, k_means_assignments = k_means_module.assign(x=bottleneck_output, y=targets, resources=res, rank=rank, device=device, cached_features=cached_features_last_iter)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 137, in assign
    initialize_centroids(batch_x, y[i])
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/KMeans.py", line 127, in initialize_centroids
    gpu_index_flat = faiss.index_cpu_to_gpu(resources, rank, index_flat)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/swigfaiss_avx2.py", line 12799, in index_cpu_to_gpu
    return _swigfaiss_avx2.index_cpu_to_gpu(provider, device, index, options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Error in virtual faiss::Index* faiss::Cloner::clone_Index(const faiss::Index*) at /home/circleci/miniconda/conda-bld/faiss-pkg_1709244513520/work/faiss/clone_index.cpp:370: clone not supported for this Index type N5faiss3gpu12GpuIndexFlatE
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Has been initialized? [[-0.195828   -0.44670364  0.39419413 -1.4339454   1.0515811   0.4778194
   0.37096497 -0.49780792 -0.31429702  0.25249594  0.02543039  0.7077888
  -0.93684006 -0.10320142 -0.4559953   0.08582632 -0.33055753 -0.16621079
  -0.13717422  0.14564157  0.08292261 -1.7963213   1.4371862   0.698497
   0.83787227 -2.0007386   0.6427469  -1.7777379   0.1421571  -1.1412573
   0.2826939  -1.3781955   0.7403096  -0.41185975 -0.5349747  -0.69990194
  -0.7649438   1.6137283  -0.74171466  0.46155882 -0.437412   -0.10639545
   0.14331868 -0.9879443  -0.71383953  1.6601866  -1.0436945   2.0504377
   0.22113661  0.39884004  0.40348595 -0.4769016  -0.969361    0.57305926
   1.2699358  -0.6580895   0.36631918 -0.727777    1.9203541  -1.4525287
   0.48478818 -0.2806147  -1.6569461   0.7449554  -0.4745787   0.11718577
  -0.36540127 -0.41650558 -1.7684462   1.3535609   0.8703932   1.1677272
  -0.05558162 -0.86250657 -0.2016354   0.6566844  -0.7417147  -1.7870295
   0.5730592   1.5393947  -0.29455218 -1.0436945   1.0655186  -0.42347443
   0.7217261   0.5962885   0.47549647  0.12473521  0.03617384 -0.4188285
   0.7356639  -0.79281896 -0.5489122  -1.1644864  -0.9879443   0.23623547
   0.94472665  0.80070543 -0.58375597  0.18977702 -0.86715245 -0.32475024
  -0.04817718  0.84716415  0.11137846  0.6427469   0.12241228  1.5022281
   0.9168517   1.1584356   1.4093113  -0.6534437   1.3628528  -0.7974648
  -1.0111737   0.1293811   0.17003219 -0.08113366 -1.057632   -0.9275484
   0.68455946  1.7716869   0.92614335  0.6706219  -0.2446094  -0.63950604
  -0.46760985 -0.11452574 -2.1401136   0.24204277  0.9679558   0.39884013
   0.9307892   1.9761041  -0.30035946  0.2455272  -1.7591547  -1.6941128
  -0.29803658 -0.4559953   1.9668125  -1.7591546  -0.8810899   0.3268295
   0.7960596  -0.4397348   1.0841022  -0.74636054 -0.07793978  0.18977708
   0.9029142  -1.4339454  -0.6395062   1.7066453  -1.2481117   0.72172636
  -0.8717984  -0.76029813  1.4093113  -0.12439811 -1.0251112   2.4406886
   0.02252663 -0.553558   -0.37701595 -0.760298    1.1584357  -0.05006468
  -0.8625066  -0.0288952   0.31753784 -1.7219877  -0.15808052  0.8611016
  -0.43044314  0.9911852  -0.27945313 -2.0564885   0.01236385  0.3779337
  -0.09652299  0.01178315  2.4778552  -0.6395061  -0.98329866 -0.36307845
   0.2153292  -0.41650563  0.83787227 -0.6859645   0.07769597  0.33844408
  -0.22486448 -0.62324554 -0.21673428 -0.11452579 -0.88573575 -0.7184855
  -0.10581475 -0.5280058  -0.8532149   0.7403096   0.9911853  -0.36075538
   0.68920535  1.4093113  -0.9275484   1.232769    0.6473927   0.96795595
   1.3907279   0.25481892  1.9575207  -1.9542799  -1.1366113   0.6334553
   2.2827299   0.17235503  0.5614445  -0.49316204 -0.81604815 -1.2945702
  -0.4467036  -1.684821    1.6694784  -1.8427799   1.1584356   1.0283519
  -1.1087364  -1.4804038   1.0097685  -0.7463605   0.11370128  0.10092519
   2.7380226  -0.1487888   0.84716403 -1.4804039  -0.13078623  0.2780481
  -1.0669239   1.5672698  -1.4525287  -0.46760985 -0.26667708 -0.19815099
  -0.2434479   0.4940799   0.8936224   0.08640703 -0.9461317   2.1712298
  -1.0947989   0.80070555 -0.8810899   1.7902703 ]
 [-0.19582811 -0.44670367  0.3941941  -1.4339455   1.0515813   0.47781932
   0.37096497 -0.49780792 -0.31429702  0.25249588  0.02543037  0.7077887
  -0.93684    -0.10320154 -0.45599532  0.08582629 -0.33055755 -0.16621064
  -0.13717422  0.14564154  0.08292264 -1.7963212   1.4371862   0.698497
   0.83787245 -2.0007384   0.64274675 -1.7777379   0.14215715 -1.1412572
   0.28269398 -1.3781953   0.7403096  -0.41185975 -0.5349746  -0.699902
  -0.76494396  1.6137283  -0.7417146   0.461559   -0.43741181 -0.10639545
   0.1433185  -0.9879443  -0.7138396   1.6601868  -1.0436945   2.0504377
   0.22113645  0.39884     0.40348577 -0.47690156 -0.969361    0.5730592
   1.2699357  -0.6580896   0.36631906 -0.72777706  1.9203541  -1.4525287
   0.48478824 -0.2806146  -1.656946    0.7449554  -0.47457868  0.11718564
  -0.36540133 -0.41650563 -1.7684462   1.353561    0.8703932   1.1677272
  -0.05558169 -0.8625066  -0.2016353   0.65668446 -0.7417147  -1.7870295
   0.5730593   1.5393947  -0.29455227 -1.0436945   1.0655186  -0.42347437
   0.7217262   0.5962885   0.47549644  0.12473533  0.03617373 -0.4188286
   0.73566383 -0.7928188  -0.54891205 -1.1644864  -0.98794436  0.23623538
   0.94472677  0.8007055  -0.583756    0.18977715 -0.8671524  -0.32475013
  -0.04817732  0.84716403  0.11137843  0.6427468   0.12241231  1.502228
   0.91685164  1.1584356   1.4093113  -0.65344346  1.3628527  -0.7974647
  -1.0111735   0.12938112  0.17003222 -0.08113373 -1.0576321  -0.92754847
   0.68455946  1.7716869   0.9261433   0.67062193 -0.24460933 -0.63950604
  -0.46760982 -0.11452564 -2.1401136   0.24204275  0.96795595  0.39884004
   0.9307892   1.9761041  -0.30035943  0.24552712 -1.7591543  -1.6941128
  -0.29803663 -0.45599526  1.9668124  -1.7591543  -0.88109004  0.32682937
   0.79605967 -0.43973476  1.0841019  -0.7463606  -0.07793971  0.18977715
   0.9029141  -1.4339454  -0.63950604  1.7066453  -1.2481116   0.7217263
  -0.87179834 -0.7602979   1.409311   -0.12439825 -1.0251112   2.4406884
   0.02252671 -0.553558   -0.37701592 -0.76029795  1.1584356  -0.05006465
  -0.8625065  -0.0288952   0.31753775 -1.7219877  -0.15808062  0.86110145
  -0.43044314  0.99118525 -0.2794532  -2.0564885   0.01236398  0.37793374
  -0.09652314  0.0117832   2.4778552  -0.63950604 -0.98329854 -0.3630783
   0.21532914 -0.41650563  0.8378724  -0.68596447  0.07769597  0.338444
  -0.22486457 -0.6232456  -0.21673426 -0.11452574 -0.8857359  -0.7184853
  -0.10581473 -0.52800584 -0.85321486  0.7403096   0.9911852  -0.36075544
   0.6892053   1.4093112  -0.9275484   1.232769    0.6473928   0.967956
   1.3907278   0.2548188   1.9575207  -1.9542799  -1.1366115   0.63345516
   2.2827299   0.17235523  0.56144446 -0.49316198 -0.8160481  -1.2945702
  -0.44670355 -1.684821    1.6694783  -1.8427796   1.1584356   1.0283519
  -1.1087363  -1.4804038   1.0097685  -0.7463605   0.1137014   0.10092528
   2.7380223  -0.14878882  0.84716415 -1.4804038  -0.13078612  0.2780482
  -1.0669239   1.5672698  -1.4525287  -0.46760997 -0.26667714 -0.19815081
  -0.24344784  0.49407977  0.8936225   0.08640707 -0.94613177  2.1712296
  -1.0947987   0.8007057  -0.88109004  1.7902703 ]]
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
K-means stats
tensor([[[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.1878e+02],
         [3.1878e+02],
         [3.1878e+02],
         [3.1878e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.3418e+02],
         [3.3418e+02],
         [3.3418e+02],
         [3.3418e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.4840e+02],
         [2.4840e+02],
         [2.4840e+02],
         [2.4840e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2942e+02],
         [2.2942e+02],
         [2.2942e+02],
         [2.2942e+02]],

        [[2.5474e+02],
         [2.5474e+02],
         [2.5474e+02],
         [2.5474e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2877e+02],
         [2.2877e+02],
         [2.2877e+02],
         [2.2877e+02]],

        [[2.7900e+02],
         [2.7900e+02],
         [2.7900e+02],
         [2.7900e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3706e+02],
         [2.3706e+02],
         [2.3706e+02],
         [2.3706e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [1.5259e-05]],

        [[3.1868e+02],
         [3.1868e+02],
         [3.1868e+02],
         [3.1868e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3631e+02],
         [2.3631e+02],
         [2.3631e+02],
         [2.3631e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.7633e+02],
         [3.7633e+02],
         [3.7633e+02],
         [3.7633e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.4716e+02],
         [3.4716e+02],
         [3.4716e+02],
         [3.4716e+02]],

        [[2.9486e+02],
         [2.9486e+02],
         [2.9486e+02],
         [2.9486e+02]],

        [[1.5259e-05],
         [1.5259e-05],
         [1.5259e-05],
         [1.5259e-05]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[2.7814e+02],
         [2.7814e+02],
         [2.7814e+02],
         [2.7814e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]]], device='cuda:0')
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 506, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 449, in train_step
    reconstruction_loss += k_means_loss
RuntimeError: output with shape [] doesn't match the broadcast shape [64, 4, 1]
tensor([[[1],
         [0],
         [0],
         [0]],

        [[1],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [2]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[0],
         [2],
         [3],
         [0]],

        [[1],
         [2],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [3],
         [4]],

        [[0],
         [0],
         [0],
         [0]],

        [[1],
         [2],
         [2],
         [1]],

        [[0],
         [2],
         [3],
         [1]],

        [[1],
         [0],
         [0],
         [0]],

        [[0],
         [1],
         [2],
         [2]],

        [[1],
         [0],
         [0],
         [4]],

        [[0],
         [0],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0]],

        [[0],
         [2],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[1],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [3],
         [2]],

        [[0],
         [0],
         [2],
         [2]],

        [[0],
         [2],
         [2],
         [2]],

        [[1],
         [1],
         [3],
         [3]],

        [[1],
         [1],
         [1],
         [3]],

        [[0],
         [1],
         [1],
         [0]],

        [[0],
         [1],
         [1],
         [0]],

        [[1],
         [1],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[0],
         [0],
         [3],
         [4]],

        [[1],
         [1],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [1],
         [3],
         [4]],

        [[0],
         [2],
         [2],
         [2]],

        [[1],
         [2],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [3]],

        [[1],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[0],
         [0],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [2]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [3],
         [4]],

        [[1],
         [2],
         [2],
         [0]],

        [[0],
         [2],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [4]],

        [[0],
         [0],
         [0],
         [3]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[1],
         [0],
         [0],
         [3]],

        [[0],
         [0],
         [0],
         [1]],

        [[1],
         [1],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [3]],

        [[1],
         [1],
         [1],
         [1]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [3],
         [1]],

        [[0],
         [0],
         [0],
         [0]]], device='cuda:0')
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
D_batch: <built-in method size of Tensor object at 0x7f272016ec10>
I_batch: <built-in method size of Tensor object at 0x7f272016ed50>
K-means stats
tensor([[[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.1878e+02],
         [3.1878e+02],
         [3.1878e+02],
         [3.1878e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.3418e+02],
         [3.3418e+02],
         [3.3418e+02],
         [3.3418e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.4840e+02],
         [2.4840e+02],
         [2.4840e+02],
         [2.4840e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2942e+02],
         [2.2942e+02],
         [2.2942e+02],
         [2.2942e+02]],

        [[2.5474e+02],
         [2.5474e+02],
         [2.5474e+02],
         [2.5474e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2877e+02],
         [2.2877e+02],
         [2.2877e+02],
         [2.2877e+02]],

        [[2.7900e+02],
         [2.7900e+02],
         [2.7900e+02],
         [2.7900e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3706e+02],
         [2.3706e+02],
         [2.3706e+02],
         [2.3706e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [1.5259e-05]],

        [[3.1868e+02],
         [3.1868e+02],
         [3.1868e+02],
         [3.1868e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3631e+02],
         [2.3631e+02],
         [2.3631e+02],
         [2.3631e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.7633e+02],
         [3.7633e+02],
         [3.7633e+02],
         [3.7633e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.4716e+02],
         [3.4716e+02],
         [3.4716e+02],
         [3.4716e+02]],

        [[2.9486e+02],
         [2.9486e+02],
         [2.9486e+02],
         [2.9486e+02]],

        [[1.5259e-05],
         [1.5259e-05],
         [1.5259e-05],
         [1.5259e-05]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[2.7814e+02],
         [2.7814e+02],
         [2.7814e+02],
         [2.7814e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]]], device='cuda:0')
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 506, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 449, in train_step
    reconstruction_loss += k_means_loss
RuntimeError: output with shape [] doesn't match the broadcast shape [64, 4, 1]
tensor([[[1],
         [0],
         [0],
         [0]],

        [[1],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [2]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[0],
         [2],
         [3],
         [0]],

        [[1],
         [2],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [3],
         [4]],

        [[0],
         [0],
         [0],
         [0]],

        [[1],
         [2],
         [2],
         [1]],

        [[0],
         [2],
         [3],
         [1]],

        [[1],
         [0],
         [0],
         [0]],

        [[0],
         [1],
         [2],
         [2]],

        [[1],
         [0],
         [0],
         [4]],

        [[0],
         [0],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0]],

        [[0],
         [2],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[1],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [3],
         [2]],

        [[0],
         [0],
         [2],
         [2]],

        [[0],
         [2],
         [2],
         [2]],

        [[1],
         [1],
         [3],
         [3]],

        [[1],
         [1],
         [1],
         [3]],

        [[0],
         [1],
         [1],
         [0]],

        [[0],
         [1],
         [1],
         [0]],

        [[1],
         [1],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[0],
         [0],
         [3],
         [4]],

        [[1],
         [1],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [1],
         [3],
         [4]],

        [[0],
         [2],
         [2],
         [2]],

        [[1],
         [2],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [3]],

        [[1],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[0],
         [0],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [2]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [3],
         [4]],

        [[1],
         [2],
         [2],
         [0]],

        [[0],
         [2],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [4]],

        [[0],
         [0],
         [0],
         [3]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[1],
         [0],
         [0],
         [3]],

        [[0],
         [0],
         [0],
         [1]],

        [[1],
         [1],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [3]],

        [[1],
         [1],
         [1],
         [1]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [3],
         [1]],

        [[0],
         [0],
         [0],
         [0]]], device='cuda:0')
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
D_batch: torch.Size([64, 4, 1])
I_batch: torch.Size([64, 4, 1])
K-means stats
tensor([[[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.1878e+02],
         [3.1878e+02],
         [3.1878e+02],
         [3.1878e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.3418e+02],
         [3.3418e+02],
         [3.3418e+02],
         [3.3418e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.4840e+02],
         [2.4840e+02],
         [2.4840e+02],
         [2.4840e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2942e+02],
         [2.2942e+02],
         [2.2942e+02],
         [2.2942e+02]],

        [[2.5474e+02],
         [2.5474e+02],
         [2.5474e+02],
         [2.5474e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2877e+02],
         [2.2877e+02],
         [2.2877e+02],
         [2.2877e+02]],

        [[2.7900e+02],
         [2.7900e+02],
         [2.7900e+02],
         [2.7900e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3706e+02],
         [2.3706e+02],
         [2.3706e+02],
         [2.3706e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [1.5259e-05]],

        [[3.1868e+02],
         [3.1868e+02],
         [3.1868e+02],
         [3.1868e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3631e+02],
         [2.3631e+02],
         [2.3631e+02],
         [2.3631e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.7633e+02],
         [3.7633e+02],
         [3.7633e+02],
         [3.7633e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.4716e+02],
         [3.4716e+02],
         [3.4716e+02],
         [3.4716e+02]],

        [[2.9486e+02],
         [2.9486e+02],
         [2.9486e+02],
         [2.9486e+02]],

        [[1.5259e-05],
         [1.5259e-05],
         [1.5259e-05],
         [1.5259e-05]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[2.7814e+02],
         [2.7814e+02],
         [2.7814e+02],
         [2.7814e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]]], device='cuda:0')
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 506, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 449, in train_step
    reconstruction_loss += k_means_loss
RuntimeError: output with shape [] doesn't match the broadcast shape [64, 4, 1]
tensor([[[1],
         [0],
         [0],
         [0]],

        [[1],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [2]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[0],
         [2],
         [3],
         [0]],

        [[1],
         [2],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [3],
         [4]],

        [[0],
         [0],
         [0],
         [0]],

        [[1],
         [2],
         [2],
         [1]],

        [[0],
         [2],
         [3],
         [1]],

        [[1],
         [0],
         [0],
         [0]],

        [[0],
         [1],
         [2],
         [2]],

        [[1],
         [0],
         [0],
         [4]],

        [[0],
         [0],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0]],

        [[0],
         [2],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[1],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [3],
         [2]],

        [[0],
         [0],
         [2],
         [2]],

        [[0],
         [2],
         [2],
         [2]],

        [[1],
         [1],
         [3],
         [3]],

        [[1],
         [1],
         [1],
         [3]],

        [[0],
         [1],
         [1],
         [0]],

        [[0],
         [1],
         [1],
         [0]],

        [[1],
         [1],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[0],
         [0],
         [3],
         [4]],

        [[1],
         [1],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [1],
         [3],
         [4]],

        [[0],
         [2],
         [2],
         [2]],

        [[1],
         [2],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [3]],

        [[1],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[0],
         [0],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [2]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [3],
         [4]],

        [[1],
         [2],
         [2],
         [0]],

        [[0],
         [2],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [4]],

        [[0],
         [0],
         [0],
         [3]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [1]],

        [[1],
         [0],
         [0],
         [3]],

        [[0],
         [0],
         [0],
         [1]],

        [[1],
         [1],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [3]],

        [[1],
         [1],
         [1],
         [1]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [3],
         [1]],

        [[0],
         [0],
         [0],
         [0]]], device='cuda:0')
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 514, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 451, in train_step
    parent_logits, child_logits = target_encoder.hierarchical_classification(h)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1709, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'DistributedDataParallel' object has no attribute 'hierarchical_classification'
D_batch: torch.Size([64, 4, 1])
I_batch: torch.Size([64, 4, 1])
K-means - done
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
    (hierarchical_classifier): HierarchicalClassifier(
      (head_drop): Dropout(p=0.2, inplace=False)
      (parent_classifier): ParentClassifier(
        (fc): Linear(in_features=1280, out_features=1081, bias=True)
      )
      (child_classifiers): ModuleList(
        (0): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=2, bias=True)
          )
        )
        (1): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=3, bias=True)
          )
        )
        (2): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=4, bias=True)
          )
        )
        (3): ModuleList(
          (0-1080): 1081 x ChildClassifier(
            (fc): Linear(in_features=1280, out_features=5, bias=True)
          )
        )
      )
    )
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 516, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 451, in train_step
    parent_logits, child_logits = target_encoder.hierarchical_classifier(h)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1709, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'DistributedDataParallel' object has no attribute 'hierarchical_classifier'
D_batch: torch.Size([64, 4, 1])
I_batch: torch.Size([64, 4, 1])
K-means - done
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 336, in main
    hierarchical_classifier = get_classification_head(target_encoder.embed_dim, nb_classes=nb_classes, drop_path=drop_path, K_range=[2,3,4,5] ,device=device)
                                                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1709, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'FinetuningModel' object has no attribute 'embed_dim'
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 340, in main
    optimizer, AE_optimizer, scaler, scheduler, wd_scheduler = init_DC_opt(
                                                               ^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/helper.py", line 467, in init_DC_opt
    optimizer = torch.optim.AdamW(encoder.parameters() + classifier.parameters())
                                  ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
TypeError: unsupported operand type(s) for +: 'generator' and 'generator'
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 340, in main
    optimizer, AE_optimizer, scaler, scheduler, wd_scheduler = init_DC_opt(
                                                               ^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/helper.py", line 467, in init_DC_opt
    optimizer = torch.optim.AdamW(list(encoder.parameters() + classifier.parameters()))
                                       ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
TypeError: unsupported operand type(s) for +: 'generator' and 'generator'
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 521, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 463, in train_step
    subclass_loss = [loss_fn(child_logits[i], k_means_assignments[i]) for i in range(len(K_range))]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 426, in loss_fn
    loss = criterion(h, targets)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/timm/loss/cross_entropy.py", line 22, in forward
    nll_loss = -logprobs.gather(dim=-1, index=target.unsqueeze(1))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)
D_batch: torch.Size([64, 4, 1])
I_batch: torch.Size([64, 4, 1])
K-means - done
hierachical classification - done
parent loss - done
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 521, in main
    return (loss_value, reconstruction_loss_value, _new_lr, _new_wd, grad_stats, bottleneck_output)
                                                                                      ^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 462, in train_step
    subclass_loss = [loss_fn(child_logits[i], k_means_assignments[i]) for i in range(len(K_range))]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 426, in loss_fn
    loss = criterion(h, targets)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/timm/loss/cross_entropy.py", line 22, in forward
    nll_loss = -logprobs.gather(dim=-1, index=target.unsqueeze(1))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)
hierachical classification - done
parent loss - done
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 525, in main
    return (loss_value, reconstruction_loss_value, _new_lr, _new_wd, grad_stats, bottleneck_output)
                                                                                      ^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 461, in train_step
    subclass_loss = [loss_fn(child_logits[i], k_means_assignments[i].to(device)) for i in range(len(K_range))]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 426, in loss_fn
    loss = criterion(h, targets)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/timm/loss/cross_entropy.py", line 22, in forward
    nll_loss = -logprobs.gather(dim=-1, index=target.unsqueeze(1))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument index in method wrapper_CUDA_gather)
hierachical classification - done
parent loss - done
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 527, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 461, in train_step
    subclass_loss = [loss_fn(child_logits[i].to(device), k_means_assignments[i].to(device)) for i in range(len(K_range))]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 426, in loss_fn
    loss = criterion(h, targets)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/timm/loss/cross_entropy.py", line 22, in forward
    nll_loss = -logprobs.gather(dim=-1, index=target.unsqueeze(1))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Index tensor must have the same number of dimensions as input tensor
hierachical classification - done
parent loss - done
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
hierachical classification - done
parent loss - done
child LOGITS, [tensor([[-1.5717e-03, -1.2159e-04],
        [-9.9945e-04,  7.7820e-04],
        [ 1.3828e-04, -9.2697e-04],
        [-6.6376e-04, -4.9210e-04],
        [-2.1458e-04, -3.7193e-04],
        [-6.6280e-05,  2.4796e-04],
        [ 1.0300e-03,  6.1798e-04],
        [ 2.5558e-04, -1.3065e-04],
        [ 1.7047e-05,  2.1057e-03],
        [-6.8283e-04,  6.5994e-04],
        [-2.3365e-04,  7.5150e-04],
        [ 1.7524e-05,  2.8038e-04],
        [-7.7438e-04, -7.6294e-04],
        [-1.2894e-03,  6.4373e-05],
        [ 9.6798e-05, -1.0452e-03],
        [-4.9973e-04,  7.0572e-04],
        [ 7.2861e-04, -9.8419e-04],
        [ 1.1978e-03,  9.3079e-04],
        [-1.2207e-04, -6.2180e-04],
        [-2.6822e-05,  6.9809e-04],
        [-6.9618e-05, -7.2861e-04],
        [-6.1035e-04,  5.1117e-04],
        [-3.1281e-04,  1.9169e-04],
        [-9.6130e-04, -1.1444e-04],
        [-3.3951e-04, -1.0605e-03],
        [ 5.6839e-04,  8.4686e-04],
        [-1.0834e-03,  1.0376e-03],
        [-1.1597e-03,  1.3809e-03],
        [ 9.5367e-04,  2.6321e-04],
        [ 3.0518e-04, -9.1171e-04],
        [ 4.8447e-04,  4.8447e-04],
        [-4.4060e-04, -1.0633e-04],
        [-4.4823e-04, -8.6975e-04],
        [-2.9755e-04, -8.6594e-04],
        [ 5.0354e-04, -4.2915e-05],
        [ 5.2643e-04,  1.7738e-04],
        [ 1.4114e-03,  1.3885e-03],
        [-1.1969e-04, -2.9564e-04],
        [-1.2512e-03,  8.0109e-05],
        [-2.7657e-04,  2.6321e-04],
        [ 2.8992e-04,  3.5858e-04],
        [ 9.2316e-04,  1.3046e-03],
        [-1.2207e-03,  8.6212e-04],
        [-3.8910e-04, -2.3270e-04],
        [ 9.9182e-04,  1.1826e-03],
        [ 1.1673e-03, -9.6893e-04],
        [ 7.5150e-04,  2.0294e-03],
        [ 8.5354e-05,  6.6757e-04],
        [ 4.5967e-04,  1.2970e-03],
        [ 2.0142e-03,  1.3962e-03],
        [-4.1389e-04,  2.0981e-04],
        [-3.9339e-05,  2.3365e-04],
        [-1.4019e-04, -2.0027e-04],
        [-2.7657e-04,  8.2016e-04],
        [-1.8406e-04,  9.5367e-04],
        [ 9.2506e-05,  8.4305e-04],
        [-2.5368e-04,  1.3351e-03],
        [ 2.4414e-03, -1.4400e-04],
        [ 7.2098e-04, -2.0218e-04],
        [ 6.7902e-04,  2.0599e-03],
        [ 7.5531e-04,  8.1253e-04],
        [-7.4768e-04,  1.0071e-03],
        [ 8.6212e-04, -1.4267e-03],
        [-2.8038e-04,  8.8501e-04]], grad_fn=<_DDPSinkBackward>), tensor([[ 4.2915e-04, -3.4332e-05,  5.3787e-04],
        [ 6.5994e-04, -2.2793e-04,  1.4529e-06],
        [ 2.2602e-04,  1.6308e-04,  1.1978e-03],
        [ 1.1206e-04,  2.5558e-04, -5.7983e-04],
        [ 2.9182e-04, -1.3657e-03,  1.8311e-04],
        [ 1.4267e-03,  1.4801e-03, -1.8311e-04],
        [ 1.6174e-03,  1.8082e-03,  8.8120e-04],
        [-1.4343e-03, -4.7445e-05, -7.8964e-04],
        [ 1.1215e-03, -2.6131e-04, -5.6076e-04],
        [ 8.1635e-04, -5.9128e-04, -1.0223e-03],
        [ 1.8311e-04,  5.4550e-04, -1.1826e-03],
        [ 2.4986e-04, -7.2098e-04, -3.7766e-04],
        [-2.8610e-04, -1.3542e-04, -7.5531e-04],
        [ 2.4796e-04, -3.2806e-04,  9.0027e-04],
        [-2.9564e-04,  2.0313e-04, -6.1035e-04],
        [-3.8910e-04, -4.7493e-04,  1.0529e-03],
        [ 1.4246e-05,  1.8787e-04, -3.4523e-04],
        [ 1.0071e-03, -3.0708e-04,  1.6022e-03],
        [-4.2915e-04, -4.6158e-04, -5.1498e-04],
        [-2.8419e-04,  3.0327e-04, -5.6839e-04],
        [ 1.6880e-04, -2.8849e-05,  6.7902e-04],
        [ 8.5831e-05,  6.0272e-04,  1.2207e-03],
        [-5.6839e-04, -7.8201e-04, -1.0605e-03],
        [-1.3428e-03,  5.5695e-04,  1.8539e-03],
        [-1.2589e-04, -2.8038e-04, -4.3869e-05],
        [-9.1553e-04,  4.6539e-04,  2.8992e-04],
        [ 1.0729e-04, -4.1580e-04, -2.3174e-04],
        [-7.2861e-04, -3.9291e-04,  5.6839e-04],
        [ 1.6689e-04, -8.4686e-04,  4.3488e-04],
        [-1.8978e-04, -7.8583e-04, -2.7657e-04],
        [-1.3542e-04,  8.1253e-04,  8.5449e-04],
        [-1.5259e-03,  2.8372e-05,  8.2779e-04],
        [-2.8229e-04,  5.6839e-04,  8.0109e-04],
        [-9.0408e-04, -1.7071e-04,  1.9312e-05],
        [-1.6499e-04,  9.9945e-04,  6.9618e-05],
        [-1.0300e-03, -1.6785e-04, -7.7438e-04],
        [-3.6240e-04, -9.4986e-04,  1.8997e-03],
        [ 2.0218e-04,  4.1199e-04, -7.3242e-04],
        [ 3.0708e-04, -8.2016e-04, -3.4332e-04],
        [-7.5150e-04, -2.2221e-04, -8.1635e-04],
        [ 3.1233e-05, -1.1139e-03,  7.7248e-05],
        [ 5.0735e-04,  1.5640e-03, -6.6280e-05],
        [-1.6022e-04, -4.0245e-04,  8.5449e-04],
        [ 1.5163e-04, -4.4060e-04, -5.9128e-04],
        [ 2.6321e-04, -4.5204e-04,  2.8253e-05],
        [ 6.3324e-04,  8.0490e-04, -1.1969e-04],
        [ 1.5736e-04,  3.5095e-04,  3.3760e-04],
        [-1.0300e-04, -2.0885e-04, -4.5013e-04],
        [-4.4823e-04,  4.8828e-04, -2.8610e-04],
        [ 7.7438e-04, -2.8801e-04, -1.1749e-03],
        [-6.6757e-04, -1.0223e-03, -6.2943e-05],
        [-1.8311e-04, -9.0027e-04,  2.2507e-04],
        [ 1.9684e-03, -7.2861e-04,  6.5613e-04],
        [-2.9945e-04, -7.2861e-04,  4.3809e-06],
        [-9.9945e-04,  5.3024e-04, -7.4768e-04],
        [ 1.0529e-03,  3.6240e-04,  4.5395e-04],
        [ 7.1526e-05, -1.2360e-03, -7.2098e-04],
        [ 9.0790e-04,  6.3324e-04,  9.6893e-04],
        [ 2.0981e-04, -4.3869e-04,  5.3406e-04],
        [-3.0518e-04,  5.9891e-04, -1.7071e-04],
        [ 6.6280e-05, -4.6730e-04,  4.3297e-04],
        [-1.1520e-03, -1.2064e-04,  3.0136e-04],
        [ 7.2479e-04, -1.8597e-04, -8.1539e-05],
        [-7.4768e-04,  1.5450e-04, -3.9482e-04]], grad_fn=<_DDPSinkBackward>), tensor([[-6.9809e-04,  9.9182e-04, -1.1444e-04, -4.4107e-05],
        [ 8.6594e-04, -4.8828e-04,  2.6512e-04, -1.4343e-03],
        [-1.4420e-03, -1.8597e-04,  7.0572e-04,  9.2316e-04],
        [ 4.3297e-04, -1.3256e-04,  6.0272e-04, -2.3174e-04],
        [-6.9809e-04, -2.9564e-04, -5.6076e-04, -4.2152e-04],
        [-1.1978e-03, -4.2534e-04,  7.2479e-04, -5.8365e-04],
        [-1.3428e-03,  5.5695e-04,  1.5640e-03,  7.5102e-06],
        [ 4.9591e-04,  2.5482e-03,  9.2030e-05, -6.2943e-04],
        [ 1.6499e-04, -7.3242e-04,  1.0729e-04, -5.9891e-04],
        [-4.7493e-04,  3.9291e-04,  2.3651e-04,  1.3542e-04],
        [ 8.9264e-04, -8.3923e-05,  1.4877e-04, -3.1662e-04],
        [-6.7520e-04,  9.1076e-05,  5.6839e-04, -1.1902e-03],
        [ 4.5395e-04,  1.2283e-03,  3.8338e-04, -1.0586e-04],
        [ 2.5177e-04,  1.1969e-04,  6.0654e-04,  5.9509e-04],
        [-9.4223e-04,  2.6703e-04,  4.9591e-04,  8.5068e-04],
        [ 4.2152e-04, -6.4850e-04, -3.2234e-04, -8.3542e-04],
        [-1.0920e-04, -4.3297e-04,  2.1648e-04,  1.1902e-03],
        [-4.8256e-04,  2.5177e-04,  3.6621e-04,  3.6812e-04],
        [ 7.2098e-04, -5.9128e-04,  2.2602e-04, -2.1515e-03],
        [ 6.9427e-04,  1.5030e-03, -8.0109e-04, -1.5068e-04],
        [ 7.0190e-04,  5.8365e-04,  7.2479e-04, -1.9455e-03],
        [-1.4496e-04,  7.8583e-04,  6.1417e-04,  4.9210e-04],
        [ 3.3188e-04, -2.3270e-04, -1.9836e-04,  3.1281e-04],
        [ 4.8399e-05, -4.4441e-04,  1.8921e-03,  3.5858e-04],
        [ 1.1597e-03,  8.5831e-05,  1.0757e-03, -2.0885e-04],
        [ 2.4414e-03, -2.2173e-05,  3.8338e-04, -8.1062e-05],
        [-2.1267e-04, -1.7014e-03,  1.8082e-03,  2.6703e-04],
        [-1.0300e-04,  8.5449e-04,  4.4441e-04, -5.6839e-04],
        [-2.5177e-04,  3.1281e-04,  2.8610e-04,  1.2283e-03],
        [ 6.7902e-04,  6.1798e-04,  4.5586e-04, -2.6512e-04],
        [ 3.8910e-04,  5.4932e-04,  4.4250e-04,  4.8637e-04],
        [-1.2302e-04,  2.0447e-03, -1.7881e-06, -1.1520e-03],
        [ 3.1662e-04,  5.1117e-04, -1.4591e-04,  8.2397e-04],
        [-5.4932e-04, -1.2817e-03,  2.2888e-03, -5.5695e-04],
        [-1.1597e-03, -7.5340e-05,  1.8539e-03,  4.7302e-04],
        [ 1.4801e-03,  3.6049e-04,  9.6798e-05, -1.2360e-03],
        [ 1.2741e-03, -1.2054e-03, -2.6512e-04,  1.4954e-03],
        [ 3.7575e-04, -4.3297e-04,  3.9816e-05, -7.7820e-04],
        [ 7.5912e-04, -4.6349e-04, -6.5231e-04,  9.1171e-04],
        [-1.6212e-04,  1.4801e-03, -9.5844e-05, -1.0223e-03],
        [-1.3275e-03,  1.1902e-03,  5.3406e-04,  9.9182e-04],
        [ 5.2643e-04, -5.6076e-04, -3.0100e-06, -5.5313e-04],
        [ 3.5286e-04, -1.2512e-03, -1.3809e-03,  1.0452e-03],
        [-5.0354e-04,  1.4267e-03,  7.3242e-04,  1.5411e-03],
        [-3.3379e-04, -6.8283e-04, -7.8583e-04, -5.7459e-05],
        [ 1.4114e-04,  1.3828e-04, -9.5749e-04,  3.9101e-04],
        [ 2.5177e-04,  1.7700e-03, -8.2970e-05, -9.9182e-05],
        [ 1.0071e-03, -1.4725e-03,  1.0071e-03,  4.0817e-04],
        [-6.2180e-04,  4.5204e-04,  3.6049e-04, -1.5616e-05],
        [ 1.6212e-04, -1.6556e-03,  1.8692e-04, -2.9182e-04],
        [-6.0272e-04,  5.6458e-04,  7.8964e-04, -2.6584e-05],
        [-1.8692e-03, -5.9509e-04, -2.0409e-04,  3.6812e-04],
        [-8.6594e-04, -1.1520e-03,  1.2875e-04,  4.7684e-04],
        [-4.3488e-04,  1.0300e-03, -1.3924e-04,  5.2643e-04],
        [ 2.1076e-04,  1.5411e-03, -2.5940e-04, -1.0757e-03],
        [-2.5940e-04,  2.7084e-04, -2.5558e-04,  4.8828e-04],
        [ 2.0905e-03,  1.0986e-03, -8.0109e-04, -1.5335e-03],
        [-2.2125e-04, -3.6716e-05,  4.9973e-04, -1.2741e-03],
        [-9.0027e-04,  6.9809e-04,  5.1880e-04,  7.2861e-04],
        [-3.4571e-05, -2.0142e-03, -6.1035e-04, -1.3504e-03],
        [-7.4387e-05, -1.5736e-04, -4.5776e-04, -1.4572e-03],
        [-2.4986e-04,  8.1253e-04,  2.2316e-04,  1.4343e-03],
        [-1.0376e-03,  3.0327e-04, -8.8120e-04,  2.4986e-04],
        [-8.5449e-04,  1.2054e-03,  8.8120e-04,  1.5640e-04]],
       grad_fn=<_DDPSinkBackward>), tensor([[ 1.0605e-03,  1.2741e-03, -6.7902e-04, -4.1389e-04, -7.3242e-04],
        [ 1.3199e-03,  8.6212e-04, -2.4319e-04,  9.1171e-04, -1.1539e-04],
        [-4.1962e-04, -1.8358e-05,  8.6212e-04,  4.8828e-04,  5.6458e-04],
        [ 6.4468e-04, -3.7384e-04, -1.1206e-05, -1.4496e-03, -1.4801e-03],
        [-1.7242e-03, -1.0223e-03, -2.6512e-04,  9.0408e-04, -5.7602e-04],
        [ 3.3760e-04, -1.7090e-03,  9.8419e-04, -3.6240e-04,  4.3106e-04],
        [-1.2665e-03, -8.5068e-04,  4.7684e-05, -2.0218e-04, -1.3885e-03],
        [-6.7902e-04, -6.5994e-04, -1.6117e-04,  4.1389e-04,  1.0223e-03],
        [-3.2806e-04, -4.3678e-04, -1.9741e-04, -5.7220e-04, -9.8228e-05],
        [ 1.7471e-03,  9.9182e-04, -4.8256e-04,  4.9973e-04, -1.3275e-03],
        [ 1.3046e-03, -3.1471e-04,  5.2261e-04, -9.1171e-04,  2.7466e-04],
        [ 2.8992e-04, -6.1035e-05, -6.7139e-04,  2.8038e-04,  6.9046e-04],
        [-1.4343e-03, -1.1902e-03,  1.6975e-04,  3.0136e-04, -3.7384e-04],
        [-1.4687e-04,  4.8876e-05,  6.9618e-05,  1.8215e-04,  2.1648e-04],
        [-3.5477e-04, -7.5912e-04,  3.6621e-04,  1.3809e-03, -4.0293e-05],
        [-5.3406e-04, -1.3351e-03, -2.7466e-04, -5.8365e-04,  1.2894e-03],
        [ 4.3297e-04, -1.4420e-03, -3.4523e-04, -5.0735e-04,  6.9809e-04],
        [-2.8229e-04, -1.2684e-04, -4.4823e-04, -3.3951e-04, -1.7853e-03],
        [-4.0436e-04, -1.2741e-03, -1.0452e-03, -9.4891e-05, -1.0986e-03],
        [ 7.0190e-04,  3.8910e-04, -4.2152e-04, -6.2943e-04,  7.6294e-04],
        [-6.4087e-04, -1.1826e-03, -6.7139e-04, -6.7055e-06,  4.8447e-04],
        [-7.0190e-04, -2.4605e-04, -2.8839e-03,  2.1973e-03, -5.1117e-04],
        [ 5.5313e-04,  6.4087e-04,  8.5449e-04, -6.9046e-04,  1.2589e-03],
        [-2.3365e-04, -7.3433e-05,  2.1744e-04, -2.7924e-03, -2.3079e-04],
        [-1.8120e-04,  6.4087e-04, -5.4169e-04,  6.5804e-05,  9.9945e-04],
        [ 1.0014e-04, -6.6757e-04,  6.1417e-04, -1.8001e-05,  1.6451e-05],
        [-3.0756e-05, -1.0757e-03,  5.6458e-04,  1.1139e-03, -3.2997e-04],
        [ 6.1417e-04, -3.6049e-04,  3.0708e-04, -4.1008e-04,  4.1962e-05],
        [ 3.7766e-04,  1.7242e-03, -8.8501e-04,  7.6771e-05,  5.0735e-04],
        [-4.4060e-04, -4.3297e-04,  1.4305e-04, -7.7486e-06, -3.4142e-04],
        [ 2.6512e-04, -6.8283e-04, -1.6212e-04, -2.4605e-04, -4.3106e-04],
        [ 3.9673e-04,  8.1062e-05,  7.3242e-04, -1.5793e-03, -8.3160e-04],
        [-7.0190e-04,  1.5869e-03, -1.4877e-03, -2.3079e-04,  6.1035e-04],
        [ 8.8501e-04,  1.5545e-04, -1.4877e-04, -4.0627e-04,  2.3556e-04],
        [ 1.9169e-04,  5.6839e-04,  1.4038e-03, -1.6022e-04, -1.3428e-03],
        [-4.4823e-05, -7.1335e-04, -2.8610e-04,  1.2817e-03, -1.1826e-03],
        [ 6.0558e-05, -1.4591e-04, -8.5068e-04, -2.3804e-03, -1.2131e-03],
        [-1.2684e-04, -1.5450e-04, -3.3188e-04, -1.4400e-04, -9.7275e-05],
        [ 2.8992e-04, -2.4796e-04,  1.1826e-03,  1.0605e-03,  1.1978e-03],
        [ 6.9427e-04,  1.7395e-03, -4.6158e-04, -3.5858e-04,  1.4877e-03],
        [-9.4986e-04, -1.1730e-04, -1.4038e-03, -1.3275e-03, -1.2512e-03],
        [ 3.3379e-04, -2.3079e-04,  1.3199e-03, -8.8120e-04,  1.0834e-03],
        [-3.8147e-04, -5.4932e-04, -7.8583e-04,  3.5286e-05,  2.0027e-04],
        [ 3.7384e-04, -3.7575e-04, -3.1853e-04, -1.5106e-03, -1.6556e-03],
        [-1.3580e-03, -1.2302e-04,  2.0027e-04, -2.4796e-04, -1.2970e-03],
        [-2.0027e-04, -1.4801e-03,  1.0610e-05, -4.6921e-04, -2.6321e-04],
        [ 1.0223e-03, -5.6839e-04, -3.2425e-04, -3.3188e-04, -1.6403e-03],
        [-1.2817e-03,  2.4128e-04, -3.1471e-04,  1.4572e-03,  2.0790e-04],
        [ 5.0354e-04, -1.8082e-03,  4.4823e-04, -6.2943e-04, -7.5150e-04],
        [-2.0599e-04, -8.0109e-04, -4.3678e-04,  7.4005e-04,  5.4550e-04],
        [-8.5068e-04,  1.2894e-03, -6.4850e-05, -5.2643e-04, -1.1826e-03],
        [-1.6708e-03,  1.1749e-03,  2.4605e-04,  4.4250e-04, -1.2512e-03],
        [ 6.9427e-04,  8.4305e-04, -1.1292e-03, -1.5030e-03,  5.9128e-04],
        [ 6.4468e-04,  4.9210e-04, -9.1171e-04,  5.2643e-04,  1.0529e-03],
        [ 7.2002e-05, -1.1826e-03,  6.7139e-04, -7.1049e-05, -2.5177e-04],
        [ 9.1553e-05, -4.2534e-04, -1.0986e-03,  2.4414e-04, -6.1035e-04],
        [ 1.2665e-03, -1.4267e-03,  1.2970e-03,  2.0409e-04,  5.5313e-04],
        [ 5.3167e-05, -1.2817e-03,  9.1553e-04, -4.8256e-04,  8.0109e-05],
        [-5.7602e-04, -1.0967e-04,  1.8387e-03, -3.5095e-04,  1.0910e-03],
        [ 1.6708e-03,  3.1281e-04,  5.9509e-04,  5.6076e-04,  1.7071e-04],
        [-1.5564e-03,  3.4904e-04,  1.5259e-03,  9.9182e-04, -2.4438e-05],
        [ 5.0306e-05, -2.3460e-04, -8.7357e-04, -2.1362e-03, -8.4305e-04],
        [-1.7071e-04,  7.1716e-04, -4.1008e-04, -3.7193e-04, -2.4128e-04],
        [ 2.7275e-04,  7.2098e-04, -7.0572e-04, -2.2602e-04, -7.8201e-04]],
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 530, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 462, in train_step
    subclass_loss = [loss_fn(child_logits[i].to(device), k_means_assignments[i].to(device)) for i in range(len(K_range))]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 426, in loss_fn
    loss = criterion(h, targets)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/timm/loss/cross_entropy.py", line 22, in forward
    nll_loss = -logprobs.gather(dim=-1, index=target.unsqueeze(1))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Index tensor must have the same number of dimensions as input tensor
       grad_fn=<_DDPSinkBackward>)]
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 529, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 447, in train_step
    k_means_loss, k_means_assignments = k_means_module.assign(x=bottleneck_output, y=targets, resources=res, rank=rank, device=device, cached_features=cached_features_last_iter)
                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: cannot access free variable 'cached_features_last_iter' where it is not associated with a value in enclosing scope
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Targets format: tensor([434,  14, 204, 172, 564, 172, 481,  47,  35, 173, 351, 396, 285, 201,
        297, 413, 402, 187, 123, 271,  41,  84, 529, 204, 166,   3,   0, 365,
        919, 428, 201, 429,  11,   3,  35, 193,  31, 439, 645, 123, 434, 576,
        152, 104, 187, 226, 219, 123,   4, 440, 123, 277, 483, 166, 490,   3,
          3, 135, 122, 173, 248, 536, 230, 125])
hierachical classification - done
parent loss - done
child LOGITS, [tensor([[-1.5717e-03, -1.2159e-04],
        [-9.9945e-04,  7.7820e-04],
        [ 1.3828e-04, -9.2697e-04],
        [-6.6376e-04, -4.9210e-04],
        [-2.1458e-04, -3.7193e-04],
        [-6.6280e-05,  2.4796e-04],
        [ 1.0300e-03,  6.1798e-04],
        [ 2.5558e-04, -1.3065e-04],
        [ 1.7047e-05,  2.1057e-03],
        [-6.8283e-04,  6.5994e-04],
        [-2.3365e-04,  7.5150e-04],
        [ 1.7524e-05,  2.8038e-04],
        [-7.7438e-04, -7.6294e-04],
        [-1.2894e-03,  6.4373e-05],
        [ 9.6798e-05, -1.0452e-03],
        [-4.9973e-04,  7.0572e-04],
        [ 7.2861e-04, -9.8419e-04],
        [ 1.1978e-03,  9.3079e-04],
        [-1.2207e-04, -6.2180e-04],
        [-2.6822e-05,  6.9809e-04],
        [-6.9618e-05, -7.2861e-04],
        [-6.1035e-04,  5.1117e-04],
        [-3.1281e-04,  1.9169e-04],
        [-9.6130e-04, -1.1444e-04],
        [-3.3951e-04, -1.0605e-03],
        [ 5.6839e-04,  8.4686e-04],
        [-1.0834e-03,  1.0376e-03],
        [-1.1597e-03,  1.3809e-03],
        [ 9.5367e-04,  2.6321e-04],
        [ 3.0518e-04, -9.1171e-04],
        [ 4.8447e-04,  4.8447e-04],
        [-4.4060e-04, -1.0633e-04],
        [-4.4823e-04, -8.6975e-04],
        [-2.9755e-04, -8.6594e-04],
        [ 5.0354e-04, -4.2915e-05],
        [ 5.2643e-04,  1.7738e-04],
        [ 1.4114e-03,  1.3885e-03],
        [-1.1969e-04, -2.9564e-04],
        [-1.2512e-03,  8.0109e-05],
        [-2.7657e-04,  2.6321e-04],
        [ 2.8992e-04,  3.5858e-04],
        [ 9.2316e-04,  1.3046e-03],
        [-1.2207e-03,  8.6212e-04],
        [-3.8910e-04, -2.3270e-04],
        [ 9.9182e-04,  1.1826e-03],
        [ 1.1673e-03, -9.6893e-04],
        [ 7.5150e-04,  2.0294e-03],
        [ 8.5354e-05,  6.6757e-04],
        [ 4.5967e-04,  1.2970e-03],
        [ 2.0142e-03,  1.3962e-03],
        [-4.1389e-04,  2.0981e-04],
        [-3.9339e-05,  2.3365e-04],
        [-1.4019e-04, -2.0027e-04],
        [-2.7657e-04,  8.2016e-04],
        [-1.8406e-04,  9.5367e-04],
        [ 9.2506e-05,  8.4305e-04],
        [-2.5368e-04,  1.3351e-03],
        [ 2.4414e-03, -1.4400e-04],
        [ 7.2098e-04, -2.0218e-04],
        [ 6.7902e-04,  2.0599e-03],
        [ 7.5531e-04,  8.1253e-04],
        [-7.4768e-04,  1.0071e-03],
        [ 8.6212e-04, -1.4267e-03],
        [-2.8038e-04,  8.8501e-04]], device='cuda:0',
       grad_fn=<_DDPSinkBackward>), tensor([[ 4.2915e-04, -3.4332e-05,  5.3787e-04],
        [ 6.5994e-04, -2.2793e-04,  1.4529e-06],
        [ 2.2602e-04,  1.6308e-04,  1.1978e-03],
        [ 1.1206e-04,  2.5558e-04, -5.7983e-04],
        [ 2.9182e-04, -1.3657e-03,  1.8311e-04],
        [ 1.4267e-03,  1.4801e-03, -1.8311e-04],
        [ 1.6174e-03,  1.8082e-03,  8.8120e-04],
        [-1.4343e-03, -4.7445e-05, -7.8964e-04],
        [ 1.1215e-03, -2.6131e-04, -5.6076e-04],
        [ 8.1635e-04, -5.9128e-04, -1.0223e-03],
        [ 1.8311e-04,  5.4550e-04, -1.1826e-03],
        [ 2.4986e-04, -7.2098e-04, -3.7766e-04],
        [-2.8610e-04, -1.3542e-04, -7.5531e-04],
        [ 2.4796e-04, -3.2806e-04,  9.0027e-04],
        [-2.9564e-04,  2.0313e-04, -6.1035e-04],
        [-3.8910e-04, -4.7493e-04,  1.0529e-03],
        [ 1.4246e-05,  1.8787e-04, -3.4523e-04],
        [ 1.0071e-03, -3.0708e-04,  1.6022e-03],
        [-4.2915e-04, -4.6158e-04, -5.1498e-04],
        [-2.8419e-04,  3.0327e-04, -5.6839e-04],
        [ 1.6880e-04, -2.8849e-05,  6.7902e-04],
        [ 8.5831e-05,  6.0272e-04,  1.2207e-03],
        [-5.6839e-04, -7.8201e-04, -1.0605e-03],
        [-1.3428e-03,  5.5695e-04,  1.8539e-03],
        [-1.2589e-04, -2.8038e-04, -4.3869e-05],
        [-9.1553e-04,  4.6539e-04,  2.8992e-04],
        [ 1.0729e-04, -4.1580e-04, -2.3174e-04],
        [-7.2861e-04, -3.9291e-04,  5.6839e-04],
        [ 1.6689e-04, -8.4686e-04,  4.3488e-04],
        [-1.8978e-04, -7.8583e-04, -2.7657e-04],
        [-1.3542e-04,  8.1253e-04,  8.5449e-04],
        [-1.5259e-03,  2.8372e-05,  8.2779e-04],
        [-2.8229e-04,  5.6839e-04,  8.0109e-04],
        [-9.0408e-04, -1.7071e-04,  1.9312e-05],
        [-1.6499e-04,  9.9945e-04,  6.9618e-05],
        [-1.0300e-03, -1.6785e-04, -7.7438e-04],
        [-3.6240e-04, -9.4986e-04,  1.8997e-03],
        [ 2.0218e-04,  4.1199e-04, -7.3242e-04],
        [ 3.0708e-04, -8.2016e-04, -3.4332e-04],
        [-7.5150e-04, -2.2221e-04, -8.1635e-04],
        [ 3.1233e-05, -1.1139e-03,  7.7248e-05],
        [ 5.0735e-04,  1.5640e-03, -6.6280e-05],
        [-1.6022e-04, -4.0245e-04,  8.5449e-04],
        [ 1.5163e-04, -4.4060e-04, -5.9128e-04],
        [ 2.6321e-04, -4.5204e-04,  2.8253e-05],
        [ 6.3324e-04,  8.0490e-04, -1.1969e-04],
        [ 1.5736e-04,  3.5095e-04,  3.3760e-04],
        [-1.0300e-04, -2.0885e-04, -4.5013e-04],
        [-4.4823e-04,  4.8828e-04, -2.8610e-04],
        [ 7.7438e-04, -2.8801e-04, -1.1749e-03],
        [-6.6757e-04, -1.0223e-03, -6.2943e-05],
        [-1.8311e-04, -9.0027e-04,  2.2507e-04],
        [ 1.9684e-03, -7.2861e-04,  6.5613e-04],
        [-2.9945e-04, -7.2861e-04,  4.3809e-06],
        [-9.9945e-04,  5.3024e-04, -7.4768e-04],
        [ 1.0529e-03,  3.6240e-04,  4.5395e-04],
        [ 7.1526e-05, -1.2360e-03, -7.2098e-04],
        [ 9.0790e-04,  6.3324e-04,  9.6893e-04],
        [ 2.0981e-04, -4.3869e-04,  5.3406e-04],
        [-3.0518e-04,  5.9891e-04, -1.7071e-04],
        [ 6.6280e-05, -4.6730e-04,  4.3297e-04],
        [-1.1520e-03, -1.2064e-04,  3.0136e-04],
        [ 7.2479e-04, -1.8597e-04, -8.1539e-05],
        [-7.4768e-04,  1.5450e-04, -3.9482e-04]], device='cuda:0',
       grad_fn=<_DDPSinkBackward>), tensor([[-6.9809e-04,  9.9182e-04, -1.1444e-04, -4.4107e-05],
        [ 8.6594e-04, -4.8828e-04,  2.6512e-04, -1.4343e-03],
        [-1.4420e-03, -1.8597e-04,  7.0572e-04,  9.2316e-04],
        [ 4.3297e-04, -1.3256e-04,  6.0272e-04, -2.3174e-04],
        [-6.9809e-04, -2.9564e-04, -5.6076e-04, -4.2152e-04],
        [-1.1978e-03, -4.2534e-04,  7.2479e-04, -5.8365e-04],
        [-1.3428e-03,  5.5695e-04,  1.5640e-03,  7.5102e-06],
        [ 4.9591e-04,  2.5482e-03,  9.2030e-05, -6.2943e-04],
        [ 1.6499e-04, -7.3242e-04,  1.0729e-04, -5.9891e-04],
        [-4.7493e-04,  3.9291e-04,  2.3651e-04,  1.3542e-04],
        [ 8.9264e-04, -8.3923e-05,  1.4877e-04, -3.1662e-04],
        [-6.7520e-04,  9.1076e-05,  5.6839e-04, -1.1902e-03],
        [ 4.5395e-04,  1.2283e-03,  3.8338e-04, -1.0586e-04],
        [ 2.5177e-04,  1.1969e-04,  6.0654e-04,  5.9509e-04],
        [-9.4223e-04,  2.6703e-04,  4.9591e-04,  8.5068e-04],
        [ 4.2152e-04, -6.4850e-04, -3.2234e-04, -8.3542e-04],
        [-1.0920e-04, -4.3297e-04,  2.1648e-04,  1.1902e-03],
        [-4.8256e-04,  2.5177e-04,  3.6621e-04,  3.6812e-04],
        [ 7.2098e-04, -5.9128e-04,  2.2602e-04, -2.1515e-03],
        [ 6.9427e-04,  1.5030e-03, -8.0109e-04, -1.5068e-04],
        [ 7.0190e-04,  5.8365e-04,  7.2479e-04, -1.9455e-03],
        [-1.4496e-04,  7.8583e-04,  6.1417e-04,  4.9210e-04],
        [ 3.3188e-04, -2.3270e-04, -1.9836e-04,  3.1281e-04],
        [ 4.8399e-05, -4.4441e-04,  1.8921e-03,  3.5858e-04],
        [ 1.1597e-03,  8.5831e-05,  1.0757e-03, -2.0885e-04],
        [ 2.4414e-03, -2.2173e-05,  3.8338e-04, -8.1062e-05],
        [-2.1267e-04, -1.7014e-03,  1.8082e-03,  2.6703e-04],
        [-1.0300e-04,  8.5449e-04,  4.4441e-04, -5.6839e-04],
        [-2.5177e-04,  3.1281e-04,  2.8610e-04,  1.2283e-03],
        [ 6.7902e-04,  6.1798e-04,  4.5586e-04, -2.6512e-04],
        [ 3.8910e-04,  5.4932e-04,  4.4250e-04,  4.8637e-04],
        [-1.2302e-04,  2.0447e-03, -1.7881e-06, -1.1520e-03],
        [ 3.1662e-04,  5.1117e-04, -1.4591e-04,  8.2397e-04],
        [-5.4932e-04, -1.2817e-03,  2.2888e-03, -5.5695e-04],
        [-1.1597e-03, -7.5340e-05,  1.8539e-03,  4.7302e-04],
        [ 1.4801e-03,  3.6049e-04,  9.6798e-05, -1.2360e-03],
        [ 1.2741e-03, -1.2054e-03, -2.6512e-04,  1.4954e-03],
        [ 3.7575e-04, -4.3297e-04,  3.9816e-05, -7.7820e-04],
        [ 7.5912e-04, -4.6349e-04, -6.5231e-04,  9.1171e-04],
        [-1.6212e-04,  1.4801e-03, -9.5844e-05, -1.0223e-03],
        [-1.3275e-03,  1.1902e-03,  5.3406e-04,  9.9182e-04],
        [ 5.2643e-04, -5.6076e-04, -3.0100e-06, -5.5313e-04],
        [ 3.5286e-04, -1.2512e-03, -1.3809e-03,  1.0452e-03],
        [-5.0354e-04,  1.4267e-03,  7.3242e-04,  1.5411e-03],
        [-3.3379e-04, -6.8283e-04, -7.8583e-04, -5.7459e-05],
        [ 1.4114e-04,  1.3828e-04, -9.5749e-04,  3.9101e-04],
        [ 2.5177e-04,  1.7700e-03, -8.2970e-05, -9.9182e-05],
        [ 1.0071e-03, -1.4725e-03,  1.0071e-03,  4.0817e-04],
        [-6.2180e-04,  4.5204e-04,  3.6049e-04, -1.5616e-05],
        [ 1.6212e-04, -1.6556e-03,  1.8692e-04, -2.9182e-04],
        [-6.0272e-04,  5.6458e-04,  7.8964e-04, -2.6584e-05],
        [-1.8692e-03, -5.9509e-04, -2.0409e-04,  3.6812e-04],
        [-8.6594e-04, -1.1520e-03,  1.2875e-04,  4.7684e-04],
        [-4.3488e-04,  1.0300e-03, -1.3924e-04,  5.2643e-04],
        [ 2.1076e-04,  1.5411e-03, -2.5940e-04, -1.0757e-03],
        [-2.5940e-04,  2.7084e-04, -2.5558e-04,  4.8828e-04],
        [ 2.0905e-03,  1.0986e-03, -8.0109e-04, -1.5335e-03],
        [-2.2125e-04, -3.6716e-05,  4.9973e-04, -1.2741e-03],
        [-9.0027e-04,  6.9809e-04,  5.1880e-04,  7.2861e-04],
        [-3.4571e-05, -2.0142e-03, -6.1035e-04, -1.3504e-03],
        [-7.4387e-05, -1.5736e-04, -4.5776e-04, -1.4572e-03],
        [-2.4986e-04,  8.1253e-04,  2.2316e-04,  1.4343e-03],
        [-1.0376e-03,  3.0327e-04, -8.8120e-04,  2.4986e-04],
        [-8.5449e-04,  1.2054e-03,  8.8120e-04,  1.5640e-04]], device='cuda:0',
       grad_fn=<_DDPSinkBackward>), tensor([[ 1.0605e-03,  1.2741e-03, -6.7902e-04, -4.1389e-04, -7.3242e-04],
        [ 1.3199e-03,  8.6212e-04, -2.4319e-04,  9.1171e-04, -1.1539e-04],
        [-4.1962e-04, -1.8358e-05,  8.6212e-04,  4.8828e-04,  5.6458e-04],
        [ 6.4468e-04, -3.7384e-04, -1.1206e-05, -1.4496e-03, -1.4801e-03],
        [-1.7242e-03, -1.0223e-03, -2.6512e-04,  9.0408e-04, -5.7602e-04],
        [ 3.3760e-04, -1.7090e-03,  9.8419e-04, -3.6240e-04,  4.3106e-04],
        [-1.2665e-03, -8.5068e-04,  4.7684e-05, -2.0218e-04, -1.3885e-03],
        [-6.7902e-04, -6.5994e-04, -1.6117e-04,  4.1389e-04,  1.0223e-03],
        [-3.2806e-04, -4.3678e-04, -1.9741e-04, -5.7220e-04, -9.8228e-05],
        [ 1.7471e-03,  9.9182e-04, -4.8256e-04,  4.9973e-04, -1.3275e-03],
        [ 1.3046e-03, -3.1471e-04,  5.2261e-04, -9.1171e-04,  2.7466e-04],
        [ 2.8992e-04, -6.1035e-05, -6.7139e-04,  2.8038e-04,  6.9046e-04],
        [-1.4343e-03, -1.1902e-03,  1.6975e-04,  3.0136e-04, -3.7384e-04],
        [-1.4687e-04,  4.8876e-05,  6.9618e-05,  1.8215e-04,  2.1648e-04],
        [-3.5477e-04, -7.5912e-04,  3.6621e-04,  1.3809e-03, -4.0293e-05],
        [-5.3406e-04, -1.3351e-03, -2.7466e-04, -5.8365e-04,  1.2894e-03],
        [ 4.3297e-04, -1.4420e-03, -3.4523e-04, -5.0735e-04,  6.9809e-04],
        [-2.8229e-04, -1.2684e-04, -4.4823e-04, -3.3951e-04, -1.7853e-03],
        [-4.0436e-04, -1.2741e-03, -1.0452e-03, -9.4891e-05, -1.0986e-03],
        [ 7.0190e-04,  3.8910e-04, -4.2152e-04, -6.2943e-04,  7.6294e-04],
        [-6.4087e-04, -1.1826e-03, -6.7139e-04, -6.7055e-06,  4.8447e-04],
        [-7.0190e-04, -2.4605e-04, -2.8839e-03,  2.1973e-03, -5.1117e-04],
        [ 5.5313e-04,  6.4087e-04,  8.5449e-04, -6.9046e-04,  1.2589e-03],
        [-2.3365e-04, -7.3433e-05,  2.1744e-04, -2.7924e-03, -2.3079e-04],
        [-1.8120e-04,  6.4087e-04, -5.4169e-04,  6.5804e-05,  9.9945e-04],
        [ 1.0014e-04, -6.6757e-04,  6.1417e-04, -1.8001e-05,  1.6451e-05],
        [-3.0756e-05, -1.0757e-03,  5.6458e-04,  1.1139e-03, -3.2997e-04],
        [ 6.1417e-04, -3.6049e-04,  3.0708e-04, -4.1008e-04,  4.1962e-05],
        [ 3.7766e-04,  1.7242e-03, -8.8501e-04,  7.6771e-05,  5.0735e-04],
        [-4.4060e-04, -4.3297e-04,  1.4305e-04, -7.7486e-06, -3.4142e-04],
        [ 2.6512e-04, -6.8283e-04, -1.6212e-04, -2.4605e-04, -4.3106e-04],
        [ 3.9673e-04,  8.1062e-05,  7.3242e-04, -1.5793e-03, -8.3160e-04],
        [-7.0190e-04,  1.5869e-03, -1.4877e-03, -2.3079e-04,  6.1035e-04],
        [ 8.8501e-04,  1.5545e-04, -1.4877e-04, -4.0627e-04,  2.3556e-04],
        [ 1.9169e-04,  5.6839e-04,  1.4038e-03, -1.6022e-04, -1.3428e-03],
        [-4.4823e-05, -7.1335e-04, -2.8610e-04,  1.2817e-03, -1.1826e-03],
        [ 6.0558e-05, -1.4591e-04, -8.5068e-04, -2.3804e-03, -1.2131e-03],
        [-1.2684e-04, -1.5450e-04, -3.3188e-04, -1.4400e-04, -9.7275e-05],
        [ 2.8992e-04, -2.4796e-04,  1.1826e-03,  1.0605e-03,  1.1978e-03],
        [ 6.9427e-04,  1.7395e-03, -4.6158e-04, -3.5858e-04,  1.4877e-03],
        [-9.4986e-04, -1.1730e-04, -1.4038e-03, -1.3275e-03, -1.2512e-03],
        [ 3.3379e-04, -2.3079e-04,  1.3199e-03, -8.8120e-04,  1.0834e-03],
        [-3.8147e-04, -5.4932e-04, -7.8583e-04,  3.5286e-05,  2.0027e-04],
        [ 3.7384e-04, -3.7575e-04, -3.1853e-04, -1.5106e-03, -1.6556e-03],
        [-1.3580e-03, -1.2302e-04,  2.0027e-04, -2.4796e-04, -1.2970e-03],
        [-2.0027e-04, -1.4801e-03,  1.0610e-05, -4.6921e-04, -2.6321e-04],
        [ 1.0223e-03, -5.6839e-04, -3.2425e-04, -3.3188e-04, -1.6403e-03],
        [-1.2817e-03,  2.4128e-04, -3.1471e-04,  1.4572e-03,  2.0790e-04],
        [ 5.0354e-04, -1.8082e-03,  4.4823e-04, -6.2943e-04, -7.5150e-04],
        [-2.0599e-04, -8.0109e-04, -4.3678e-04,  7.4005e-04,  5.4550e-04],
        [-8.5068e-04,  1.2894e-03, -6.4850e-05, -5.2643e-04, -1.1826e-03],
        [-1.6708e-03,  1.1749e-03,  2.4605e-04,  4.4250e-04, -1.2512e-03],
        [ 6.9427e-04,  8.4305e-04, -1.1292e-03, -1.5030e-03,  5.9128e-04],
        [ 6.4468e-04,  4.9210e-04, -9.1171e-04,  5.2643e-04,  1.0529e-03],
        [ 7.2002e-05, -1.1826e-03,  6.7139e-04, -7.1049e-05, -2.5177e-04],
        [ 9.1553e-05, -4.2534e-04, -1.0986e-03,  2.4414e-04, -6.1035e-04],
        [ 1.2665e-03, -1.4267e-03,  1.2970e-03,  2.0409e-04,  5.5313e-04],
        [ 5.3167e-05, -1.2817e-03,  9.1553e-04, -4.8256e-04,  8.0109e-05],
        [-5.7602e-04, -1.0967e-04,  1.8387e-03, -3.5095e-04,  1.0910e-03],
        [ 1.6708e-03,  3.1281e-04,  5.9509e-04,  5.6076e-04,  1.7071e-04],
        [-1.5564e-03,  3.4904e-04,  1.5259e-03,  9.9182e-04, -2.4438e-05],
        [ 5.0306e-05, -2.3460e-04, -8.7357e-04, -2.1362e-03, -8.4305e-04],
        [-1.7071e-04,  7.1716e-04, -4.1008e-04, -3.7193e-04, -2.4128e-04],
        [ 2.7275e-04,  7.2098e-04, -7.0572e-04, -2.2602e-04, -7.8201e-04]],
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 530, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 472, in train_step
    subclass_loss = [loss_fn(child_logits[i].to(device), k_means_assignments[i]) for i in range(len(K_range))]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 426, in loss_fn
    loss = criterion(h, targets)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/timm/loss/cross_entropy.py", line 22, in forward
    nll_loss = -logprobs.gather(dim=-1, index=target.unsqueeze(1))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Index tensor must have the same number of dimensions as input tensor
       device='cuda:0', grad_fn=<_DDPSinkBackward>)]
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 531, in main
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 462, in train_step
    (2) - Send the tensors above to the proper device. FIXME verify why child logits are in cpu instead of cuda:0
                   ^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'size'
Targets format: torch.Size([64])
hierachical classification - done
parent loss - done
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 530, in main
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 472, in train_step
    # Model selection: Iterate through every K classifier computing the loss then select the one with smallest value
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 426, in loss_fn
    loss = criterion(h, targets)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/timm/loss/cross_entropy.py", line 22, in forward
    nll_loss = -logprobs.gather(dim=-1, index=target.unsqueeze(1))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Index tensor must have the same number of dimensions as input tensor
Targets format: torch.Size([64])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 532, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 474, in train_step
    subclass_loss = [loss_fn(child_logits[i].to(device), k_means_assignments[i]) for i in range(len(K_range))]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 426, in loss_fn
    loss = criterion(h, targets)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/timm/loss/cross_entropy.py", line 22, in forward
    nll_loss = -logprobs.gather(dim=-1, index=target.unsqueeze(1))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Index tensor must have the same number of dimensions as input tensor
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 537, in main
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 476, in train_step
    for k in range(len(K_range)):
                         ^^^^^^^^^
ValueError: slice step cannot be zero
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 540, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 480, in train_step
    subclass_loss = loss_fn(child_logits[k], )
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: main.<locals>.train_step.<locals>.loss_fn() missing 1 required positional argument: 'targets'
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Kmeans target: tensor([1], device='cuda:0')
Kmeans target: torch.Size([1])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 540, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 480, in train_step
    subclass_loss = loss_fn(child_logits[k], )
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: main.<locals>.train_step.<locals>.loss_fn() missing 1 required positional argument: 'targets'
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Kmeans target: tensor([1], device='cuda:0')
Kmeans target: torch.Size([1])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 540, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 480, in train_step
    subclass_loss = loss_fn(child_logits[k], )
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: main.<locals>.train_step.<locals>.loss_fn() missing 1 required positional argument: 'targets'
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Kmeans target: tensor(0, device='cuda:0')
Kmeans target: torch.Size([])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 540, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 480, in train_step
    subclass_loss = loss_fn(child_logits[k], k_means_target)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 426, in loss_fn
    loss = criterion(h, targets)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/timm/loss/cross_entropy.py", line 22, in forward
    nll_loss = -logprobs.gather(dim=-1, index=target.unsqueeze(1))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Index tensor must have the same number of dimensions as input tensor
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Kmeans target: tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [2],
        [0],
        [0],
        [0],
        [2],
        [2],
        [0],
        [1],
        [0],
        [0],
        [1],
        [2],
        [0],
        [0],
        [0],
        [0],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [1],
        [0],
        [0],
        [1],
        [2],
        [2],
        [0],
        [0],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [0],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0]], device='cuda:0')
Kmeans target: torch.Size([64, 1])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 541, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 480, in train_step
    subclass_loss = loss_fn(child_logits[k], k_means_target)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 426, in loss_fn
    loss = criterion(h, targets)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/timm/loss/cross_entropy.py", line 22, in forward
    nll_loss = -logprobs.gather(dim=-1, index=target.unsqueeze(1))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Index tensor must have the same number of dimensions as input tensor
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Kmeans target: tensor([0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 2, 0, 1, 0, 0, 1, 2, 0, 0, 0, 0, 2, 1,
        1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 2, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], device='cuda:0')
Kmeans target: torch.Size([64, 1])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 539, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 480, in train_step
    subclass_loss = loss_fn(child_logits[k], k_means_target)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 426, in loss_fn
    loss = criterion(h, targets)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/timm/loss/cross_entropy.py", line 22, in forward
    nll_loss = -logprobs.gather(dim=-1, index=target.unsqueeze(1))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Index tensor must have the same number of dimensions as input tensor
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Kmeans target: tensor([0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 2, 0, 1, 0, 0, 1, 2, 0, 0, 0, 0, 2, 1,
        1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 2, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], device='cuda:0')
Kmeans target: torch.Size([64, 1])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [34,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [35,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [46,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [47,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [5,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [6,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [10,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [11,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [17,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [22,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 539, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 478, in train_step
    print('Kmeans target:', k_means_target)
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor.py", line 464, in __repr__
    return torch._tensor_str._str(self, tensor_contents=tensor_contents)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor_str.py", line 697, in _str
    return _str_intern(self, tensor_contents=tensor_contents)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor_str.py", line 617, in _str_intern
    tensor_str = _tensor_str(self, indent)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor_str.py", line 349, in _tensor_str
    formatter = _Formatter(get_summarized_data(self) if summarize else self)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor_str.py", line 133, in __init__
    value_str = f"{value}"
                  ^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor.py", line 990, in __format__
    return self.item().__format__(format_spec)
           ^^^^^^^^^^^
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.

Faiss assertion 'err == cudaSuccess' failed in virtual void faiss::gpu::StandardGpuResourcesImpl::deallocMemory(int, void*) at /home/circleci/miniconda/conda-bld/faiss-pkg_1709244513520/work/faiss/gpu/StandardGpuResources.cpp:607; details: Failed to cudaFree pointer 0x7f9607cd1c00 (error 710 device-side assert triggered)
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.01 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [34,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [35,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [46,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [47,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [5,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [6,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [10,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [11,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [17,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [22,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 540, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 479, in train_step
    print('Kmeans target:', k_means_target)
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor.py", line 464, in __repr__
    return torch._tensor_str._str(self, tensor_contents=tensor_contents)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor_str.py", line 697, in _str
    return _str_intern(self, tensor_contents=tensor_contents)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor_str.py", line 617, in _str_intern
    tensor_str = _tensor_str(self, indent)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor_str.py", line 349, in _tensor_str
    formatter = _Formatter(get_summarized_data(self) if summarize else self)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor_str.py", line 133, in __init__
    value_str = f"{value}"
                  ^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/_tensor.py", line 990, in __format__
    return self.item().__format__(format_spec)
           ^^^^^^^^^^^
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.

Faiss assertion 'err == cudaSuccess' failed in virtual void faiss::gpu::StandardGpuResourcesImpl::deallocMemory(int, void*) at /home/circleci/miniconda/conda-bld/faiss-pkg_1709244513520/work/faiss/gpu/StandardGpuResources.cpp:607; details: Failed to cudaFree pointer 0x7fb88dcd1c00 (error 710 device-side assert triggered)
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 539, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 480, in train_step
    subclass_loss = loss_fn(child_logits[k], k_means_target)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 426, in loss_fn
    loss = criterion(h, targets)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/timm/loss/cross_entropy.py", line 22, in forward
    nll_loss = -logprobs.gather(dim=-1, index=target.unsqueeze(1))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Index tensor must have the same number of dimensions as input tensor
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Kmeans target: tensor([0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 2, 0, 1, 0, 0, 1, 2, 0, 0, 0, 0, 2, 1,
        1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 2, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], device='cuda:0')
Kmeans target: torch.Size([64, 1])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 540, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 481, in train_step
    subclass_loss = loss_fn(child_logits[k], k_means_target)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 426, in loss_fn
    loss = criterion(h, targets)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/timm/loss/cross_entropy.py", line 22, in forward
    nll_loss = -logprobs.gather(dim=-1, index=target.unsqueeze(1))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Index tensor must have the same number of dimensions as input tensor
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Kmeans target: torch.Size([64, 1])
Kmeans target: tensor([0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 2, 0, 1, 0, 0, 1, 2, 0, 0, 0, 0, 2, 1,
        1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 2, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 2,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], device='cuda:0')
Kmeans target: torch.Size([64, 1])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [34,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [35,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [46,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [47,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [5,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [6,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [10,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [11,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [17,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1716905971214/work/aten/src/ATen/native/cuda/ScatterGatherKernel.cu:144: operator(): block: [0,0,0], thread: [22,0,0] Assertion `idx_dim >= 0 && idx_dim < index_size && "index out of bounds"` failed.
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 539, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 477, in train_step
    k_means_target = k_means_assignments[:,k+1,:]
                     ~~~~~~~~~~~~~~~~~~~^^^^^^^^^
IndexError: index 4 is out of bounds for dimension 1 with size 4
Faiss assertion 'err == cudaSuccess' failed in virtual void faiss::gpu::StandardGpuResourcesImpl::deallocMemory(int, void*) at /home/circleci/miniconda/conda-bld/faiss-pkg_1709244513520/work/faiss/gpu/StandardGpuResources.cpp:607; details: Failed to cudaFree pointer 0x7fe46fcd1c00 (error 710 device-side assert triggered)
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 539, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 485, in train_step
    subclass_loss = subclass_loss[torch.argmin(torch.cat(subclass_loss), dim=0)]
                                               ^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: cat(): argument 'tensors' (position 1) must be tuple of Tensors, not Tensor
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
[tensor(0.6932, device='cuda:0', grad_fn=<AllReduceBackward>), tensor(1.0986, device='cuda:0', grad_fn=<AllReduceBackward>), tensor(1.3865, device='cuda:0', grad_fn=<AllReduceBackward>), tensor(1.6095, device='cuda:0', grad_fn=<AllReduceBackward>)]
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 539, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 483, in train_step
    print(torch.argmin(torch.cat(subclass_loss), dim=0))
                       ^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: cat(): argument 'tensors' (position 1) must be tuple of Tensors, not Tensor
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
[tensor(0.6932, device='cuda:0', grad_fn=<AllReduceBackward>), tensor(1.0986, device='cuda:0', grad_fn=<AllReduceBackward>), tensor(1.3865, device='cuda:0', grad_fn=<AllReduceBackward>), tensor(1.6095, device='cuda:0', grad_fn=<AllReduceBackward>)]
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.01 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 540, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 484, in train_step
    print(torch.argmin(torch.cat(subclass_losses), dim=0))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: zero-dimensional tensor (at position 0) cannot be concatenated
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
[tensor(0.6932, device='cuda:0', grad_fn=<AllReduceBackward>), tensor(1.0986, device='cuda:0', grad_fn=<AllReduceBackward>), tensor(1.3865, device='cuda:0', grad_fn=<AllReduceBackward>), tensor(1.6095, device='cuda:0', grad_fn=<AllReduceBackward>)]
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 543, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 489, in train_step
    subclass_loss = subclass_loss[torch.argmin(torch.cat(subclass_loss), dim=0)]
                                               ^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: cat(): argument 'tensors' (position 1) must be tuple of Tensors, not Tensor
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
tensor([0.6932, 1.0986, 1.3865, 1.6095], device='cuda:0',
       grad_fn=<StackBackward0>)
tensor(0, device='cuda:0')
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 542, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 488, in train_step
    subclass_loss = subclass_loss[torch.argmin(torch.cat(subclass_loss), dim=0)]
                                               ^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: cat(): argument 'tensors' (position 1) must be tuple of Tensors, not Tensor
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
K-Means losses shape: torch.Size([64, 4, 1])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 544, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 508, in train_step
    loss += subclass_loss
RuntimeError: Output 0 of AllReduceBackward is a view and is being modified inplace. This view was created inside a custom Function (or because an input was returned as-is) and the autograd logic to handle view+inplace would override the custom backward associated with the custom Function, leading to incorrect gradients. This behavior is forbidden. You can fix this by cloning the output of the custom Function.
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
K-Means losses shape: torch.Size([64, 4, 1])
K-Means (best-k) loss shape: torch.Size([64, 1])
K-Means (best-k) loss shape: torch.Size([64])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 533, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 475, in train_step
    subclass_loss = torch.nn.CrossEntropyLoss(child_logits[k], k_means_target, reduction='none')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/loss.py", line 1180, in __init__
    super().__init__(weight, size_average, reduce, reduction)
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/loss.py", line 30, in __init__
    super().__init__(size_average, reduce, reduction)
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/modules/loss.py", line 23, in __init__
    self.reduction: str = _Reduction.legacy_get_string(size_average, reduce)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/torch/nn/_reduction.py", line 35, in legacy_get_string
    if size_average and reduce:
       ^^^^^^^^^^^^
RuntimeError: Boolean value of Tensor with more than one value is ambiguous
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 536, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 486, in train_step
    k_means_loss = k_means_losses[:, best_k_index, :]
                   ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
IndexError: index 27 is out of bounds for dimension 1 with size 4
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss shape torch.Size([64])
Subclass loss shape torch.Size([64])
Subclass loss shape torch.Size([64])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 536, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 486, in train_step
    k_means_loss = k_means_losses[:, best_k_index, :]
                   ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
IndexError: index 27 is out of bounds for dimension 1 with size 4
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 539, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 489, in train_step
    k_means_loss = k_means_losses[:, best_k_index, :]
                   ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
IndexError: index 27 is out of bounds for dimension 1 with size 4
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 542, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 492, in train_step
    k_means_loss = k_means_losses[:, best_k_index, :]
                   ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
IndexError: index 27 is out of bounds for dimension 1 with size 4
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K indexes per datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 544, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 494, in train_step
    k_means_loss = k_means_losses[:, best_k_index, :]
                   ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
IndexError: index 27 is out of bounds for dimension 1 with size 4
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K indexes per datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
tensor([[0.6924, 0.6923, 0.6926,  ..., 0.6940, 0.6920, 0.6937],
        [0.6924, 0.6923, 0.6926,  ..., 0.6940, 0.6920, 0.6937],
        [0.6924, 0.6923, 0.6926,  ..., 0.6940, 0.6920, 0.6937],
        ...,
        [0.6924, 0.6923, 0.6926,  ..., 0.6940, 0.6920, 0.6937],
        [0.6924, 0.6923, 0.6926,  ..., 0.6940, 0.6920, 0.6937],
        [0.6924, 0.6923, 0.6926,  ..., 0.6940, 0.6920, 0.6937]],
       device='cuda:0', grad_fn=<IndexBackward0>)
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 546, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 496, in train_step
    k_means_loss = k_means_losses[:, best_k_index, :]
                   ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
IndexError: index 27 is out of bounds for dimension 1 with size 4
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K indexes per datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
tensor([[0.6924, 0.6923, 0.6926,  ..., 0.6940, 0.6920, 0.6937],
        [0.6924, 0.6923, 0.6926,  ..., 0.6940, 0.6920, 0.6937],
        [0.6924, 0.6923, 0.6926,  ..., 0.6940, 0.6920, 0.6937],
        ...,
        [0.6924, 0.6923, 0.6926,  ..., 0.6940, 0.6920, 0.6937],
        [0.6924, 0.6923, 0.6926,  ..., 0.6940, 0.6920, 0.6937],
        [0.6924, 0.6923, 0.6926,  ..., 0.6940, 0.6920, 0.6937]],
       device='cuda:0', grad_fn=<IndexBackward0>)
torch.Size([64, 64])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 545, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 495, in train_step
    k_means_loss = k_means_losses[:, best_k_index, :]
                   ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
IndexError: index 27 is out of bounds for dimension 1 with size 4
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K indexes per datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
tensor(45.9750, device='cuda:0', grad_fn=<MeanBackward0>)
tensor(0.6932, device='cuda:0', grad_fn=<MeanBackward0>)
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 546, in main
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 496, in train_step
    best_k_index = torch.argmin(subclass_losses)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
IndexError: index 27 is out of bounds for dimension 1 with size 4
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K indexes per datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
tensor([0.7183, 0.7183, 0.7184, 0.7183, 0.7184, 0.7184, 0.7184, 0.7184, 0.7184,
        0.7183, 0.7184, 0.7184, 0.7184, 0.7184, 0.7184, 0.7184, 0.7183, 0.7184,
        0.7184, 0.7184, 0.7184, 0.7184, 0.7184, 0.7184, 0.7184, 0.7184, 0.7184,
        0.7183, 0.7183, 0.7184, 0.7184, 0.7183, 0.7184, 0.7184, 0.7183, 0.7184,
        0.7184, 0.7184, 0.7184, 0.7184, 0.7184, 0.7184, 0.7184, 0.7184, 0.7184,
        0.7184, 0.7183, 0.7184, 0.7184, 0.7183, 0.7184, 0.7184, 0.7183, 0.7184,
        0.7184, 0.7184, 0.7184, 0.7184, 0.7184, 0.7183, 0.7184, 0.7183, 0.7183,
        0.7184], device='cuda:0', grad_fn=<DivBackward0>)
tensor(0.6932, device='cuda:0', grad_fn=<MeanBackward0>)
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 547, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 497, in train_step
    k_means_loss = k_means_losses[:, best_k_index, :]
                   ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
IndexError: index 27 is out of bounds for dimension 1 with size 4
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K indexes per datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
tensor(0.6932, device='cuda:0', grad_fn=<DivBackward0>)
tensor(0.6932, device='cuda:0', grad_fn=<MeanBackward0>)
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.01 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 545, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 497, in train_step
    print('K-Means (best-k) loss shape:', k_means_loss.size())
                                          ^^^^^^^^^^^^
NameError: name 'k_means_loss' is not defined. Did you mean: 'k_means_losses'?
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K index by datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
K-Means losses shape: torch.Size([64, 4, 1])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.01 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 549, in main
    return (loss_value, reconstruction_loss_value, _new_lr, _new_wd, grad_stats, bottleneck_output)
                                                                                      ^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 502, in train_step
    print('K-Means losses shape:', k_means_losses.size())
                                          ^^^^^^^^^^^^^^^^
IndexError: Dimension out of range (expected to be in range of [-1, 0], but got 1)
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K index by datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
K-means losses: torch.Size([4, 64])
K-Means losses shape: torch.Size([4, 64])
K-Means (best-k) loss shape: torch.Size([])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 549, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 502, in train_step
    print('K-Means (best-k) loss shape:', k_means_loss.squeeze(1).size())
                                          ^^^^^^^^^^^^^^^^^^^^^^^
IndexError: Dimension out of range (expected to be in range of [-1, 0], but got 1)
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K index by datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
K-means losses: torch.Size([4, 64])
Subclass loss model selection: tensor(0.6932, device='cuda:0', grad_fn=<DivBackward0>)
K-Means loss model selection: tensor(62.2160, device='cuda:0')
K-Means losses shape: torch.Size([4, 64])
K-Means (best-k) loss shape: torch.Size([])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
K-Means losses: tensor([[[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.1878e+02],
         [3.1878e+02],
         [3.1878e+02],
         [3.1878e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.3418e+02],
         [3.3418e+02],
         [3.3418e+02],
         [3.3418e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.4840e+02],
         [2.4840e+02],
         [2.4840e+02],
         [2.4840e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2942e+02],
         [2.2942e+02],
         [2.2942e+02],
         [2.2942e+02]],

        [[2.5474e+02],
         [2.5474e+02],
         [2.5474e+02],
         [2.5474e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2877e+02],
         [2.2877e+02],
         [2.2877e+02],
         [2.2877e+02]],

        [[2.7900e+02],
         [2.7900e+02],
         [2.7900e+02],
         [2.7900e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3706e+02],
         [2.3706e+02],
         [2.3706e+02],
         [2.3706e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [1.5259e-05]],

        [[3.1868e+02],
         [3.1868e+02],
         [3.1868e+02],
         [3.1868e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3631e+02],
         [2.3631e+02],
         [2.3631e+02],
         [2.3631e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.7633e+02],
         [3.7633e+02],
         [3.7633e+02],
         [3.7633e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.4716e+02],
         [3.4716e+02],
         [3.4716e+02],
         [3.4716e+02]],

        [[2.9486e+02],
         [2.9486e+02],
         [2.9486e+02],
         [2.9486e+02]],

        [[1.5259e-05],
         [1.5259e-05],
         [1.5259e-05],
         [1.5259e-05]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[2.7814e+02],
         [2.7814e+02],
         [2.7814e+02],
         [2.7814e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]]], device='cuda:0')
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 552, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 505, in train_step
    print('K-Means (best-k) loss shape:', k_means_loss.squeeze(1).size())
                                          ^^^^^^^^^^^^^^^^^^^^^^^
IndexError: Dimension out of range (expected to be in range of [-1, 0], but got 1)
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K index by datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
K-means losses: torch.Size([4, 64])
Subclass loss model selection: tensor(0.6932, device='cuda:0', grad_fn=<DivBackward0>)
K-Means loss model selection: tensor(62.2160, device='cuda:0')
K-Means losses shape: torch.Size([4, 64])
K-Means (best-k) loss shape: torch.Size([])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.04 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
K-Means losses: tensor([[[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.1878e+02],
         [3.1878e+02],
         [3.1878e+02],
         [3.1878e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.3418e+02],
         [3.3418e+02],
         [3.3418e+02],
         [3.3418e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.4840e+02],
         [2.4840e+02],
         [2.4840e+02],
         [2.4840e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2942e+02],
         [2.2942e+02],
         [2.2942e+02],
         [2.2942e+02]],

        [[2.5474e+02],
         [2.5474e+02],
         [2.5474e+02],
         [2.5474e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2877e+02],
         [2.2877e+02],
         [2.2877e+02],
         [2.2877e+02]],

        [[2.7900e+02],
         [2.7900e+02],
         [2.7900e+02],
         [2.7900e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3706e+02],
         [2.3706e+02],
         [2.3706e+02],
         [2.3706e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [1.5259e-05]],

        [[3.1868e+02],
         [3.1868e+02],
         [3.1868e+02],
         [3.1868e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3631e+02],
         [2.3631e+02],
         [2.3631e+02],
         [2.3631e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.7633e+02],
         [3.7633e+02],
         [3.7633e+02],
         [3.7633e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.4716e+02],
         [3.4716e+02],
         [3.4716e+02],
         [3.4716e+02]],

        [[2.9486e+02],
         [2.9486e+02],
         [2.9486e+02],
         [2.9486e+02]],

        [[1.5259e-05],
         [1.5259e-05],
         [1.5259e-05],
         [1.5259e-05]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[2.7814e+02],
         [2.7814e+02],
         [2.7814e+02],
         [2.7814e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]]], device='cuda:0')
K-Means losses: torch.Size([64, 4, 1])
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 549, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 513, in train_step
    loss += subclass_loss
RuntimeError: Output 0 of AllReduceBackward is a view and is being modified inplace. This view was created inside a custom Function (or because an input was returned as-is) and the autograd logic to handle view+inplace would override the custom backward associated with the custom Function, leading to incorrect gradients. This behavior is forbidden. You can fix this by cloning the output of the custom Function.
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K index by datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
K-means losses: torch.Size([4, 64])
Subclass loss model selection: tensor(0.6932, device='cuda:0', grad_fn=<DivBackward0>)
K-Means loss model selection: tensor(62.2160, device='cuda:0')
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
K-Means losses: tensor([[[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.1878e+02],
         [3.1878e+02],
         [3.1878e+02],
         [3.1878e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.3418e+02],
         [3.3418e+02],
         [3.3418e+02],
         [3.3418e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.4840e+02],
         [2.4840e+02],
         [2.4840e+02],
         [2.4840e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2942e+02],
         [2.2942e+02],
         [2.2942e+02],
         [2.2942e+02]],

        [[2.5474e+02],
         [2.5474e+02],
         [2.5474e+02],
         [2.5474e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2877e+02],
         [2.2877e+02],
         [2.2877e+02],
         [2.2877e+02]],

        [[2.7900e+02],
         [2.7900e+02],
         [2.7900e+02],
         [2.7900e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3706e+02],
         [2.3706e+02],
         [2.3706e+02],
         [2.3706e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [1.5259e-05]],

        [[3.1868e+02],
         [3.1868e+02],
         [3.1868e+02],
         [3.1868e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3631e+02],
         [2.3631e+02],
         [2.3631e+02],
         [2.3631e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.7633e+02],
         [3.7633e+02],
         [3.7633e+02],
         [3.7633e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.4716e+02],
         [3.4716e+02],
         [3.4716e+02],
         [3.4716e+02]],

        [[2.9486e+02],
         [2.9486e+02],
         [2.9486e+02],
         [2.9486e+02]],

        [[1.5259e-05],
         [1.5259e-05],
         [1.5259e-05],
         [1.5259e-05]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[2.7814e+02],
         [2.7814e+02],
         [2.7814e+02],
         [2.7814e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]]], device='cuda:0')
K-Means losses: torch.Size([64, 4, 1])
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 544, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 508, in train_step
    loss += subclass_loss
RuntimeError: Output 0 of AllReduceBackward is a view and is being modified inplace. This view was created inside a custom Function (or because an input was returned as-is) and the autograd logic to handle view+inplace would override the custom backward associated with the custom Function, leading to incorrect gradients. This behavior is forbidden. You can fix this by cloning the output of the custom Function.
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K index by datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
K-means losses: torch.Size([4, 64])
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
K-Means losses: tensor([[[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.1878e+02],
         [3.1878e+02],
         [3.1878e+02],
         [3.1878e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.3418e+02],
         [3.3418e+02],
         [3.3418e+02],
         [3.3418e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.4840e+02],
         [2.4840e+02],
         [2.4840e+02],
         [2.4840e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2942e+02],
         [2.2942e+02],
         [2.2942e+02],
         [2.2942e+02]],

        [[2.5474e+02],
         [2.5474e+02],
         [2.5474e+02],
         [2.5474e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2877e+02],
         [2.2877e+02],
         [2.2877e+02],
         [2.2877e+02]],

        [[2.7900e+02],
         [2.7900e+02],
         [2.7900e+02],
         [2.7900e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3706e+02],
         [2.3706e+02],
         [2.3706e+02],
         [2.3706e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [1.5259e-05]],

        [[3.1868e+02],
         [3.1868e+02],
         [3.1868e+02],
         [3.1868e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3631e+02],
         [2.3631e+02],
         [2.3631e+02],
         [2.3631e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.7633e+02],
         [3.7633e+02],
         [3.7633e+02],
         [3.7633e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.4716e+02],
         [3.4716e+02],
         [3.4716e+02],
         [3.4716e+02]],

        [[2.9486e+02],
         [2.9486e+02],
         [2.9486e+02],
         [2.9486e+02]],

        [[1.5259e-05],
         [1.5259e-05],
         [1.5259e-05],
         [1.5259e-05]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[2.7814e+02],
         [2.7814e+02],
         [2.7814e+02],
         [2.7814e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]]], device='cuda:0')
K-Means losses: torch.Size([64, 4, 1])
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 549, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 513, in train_step
    loss += subclass_loss
RuntimeError: Output 0 of AllReduceBackward is a view and is being modified inplace. This view was created inside a custom Function (or because an input was returned as-is) and the autograd logic to handle view+inplace would override the custom backward associated with the custom Function, leading to incorrect gradients. This behavior is forbidden. You can fix this by cloning the output of the custom Function.
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K index by datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
K-means losses: torch.Size([4, 64])
Losses
Parent class loss: tensor(6.9857, device='cuda:0', grad_fn=<AllReduceBackward>)
Subclass loss tensor(0.6932, device='cuda:0', grad_fn=<DivBackward0>)
K-means loss tensor(62.2160, device='cuda:0')
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
K-Means losses: tensor([[[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.1878e+02],
         [3.1878e+02],
         [3.1878e+02],
         [3.1878e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.3418e+02],
         [3.3418e+02],
         [3.3418e+02],
         [3.3418e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.4840e+02],
         [2.4840e+02],
         [2.4840e+02],
         [2.4840e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2942e+02],
         [2.2942e+02],
         [2.2942e+02],
         [2.2942e+02]],

        [[2.5474e+02],
         [2.5474e+02],
         [2.5474e+02],
         [2.5474e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2877e+02],
         [2.2877e+02],
         [2.2877e+02],
         [2.2877e+02]],

        [[2.7900e+02],
         [2.7900e+02],
         [2.7900e+02],
         [2.7900e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3706e+02],
         [2.3706e+02],
         [2.3706e+02],
         [2.3706e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [1.5259e-05]],

        [[3.1868e+02],
         [3.1868e+02],
         [3.1868e+02],
         [3.1868e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3631e+02],
         [2.3631e+02],
         [2.3631e+02],
         [2.3631e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.7633e+02],
         [3.7633e+02],
         [3.7633e+02],
         [3.7633e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.4716e+02],
         [3.4716e+02],
         [3.4716e+02],
         [3.4716e+02]],

        [[2.9486e+02],
         [2.9486e+02],
         [2.9486e+02],
         [2.9486e+02]],

        [[1.5259e-05],
         [1.5259e-05],
         [1.5259e-05],
         [1.5259e-05]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[2.7814e+02],
         [2.7814e+02],
         [2.7814e+02],
         [2.7814e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]]], device='cuda:0')
K-Means losses: torch.Size([64, 4, 1])
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<AllReduceBackward>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<AllReduceBackward>)
Subclass loss shape torch.Size([64])
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 550, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 514, in train_step
    loss += subclass_loss
RuntimeError: Output 0 of AllReduceBackward is a view and is being modified inplace. This view was created inside a custom Function (or because an input was returned as-is) and the autograd logic to handle view+inplace would override the custom backward associated with the custom Function, leading to incorrect gradients. This behavior is forbidden. You can fix this by cloning the output of the custom Function.
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<AllReduceBackward>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<AllReduceBackward>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K index by datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
K-means losses: torch.Size([4, 64])
Losses
Parent class loss: tensor(6.9857, device='cuda:0', grad_fn=<AllReduceBackward>)
Subclass loss tensor(0.6932, device='cuda:0', grad_fn=<DivBackward0>)
K-means loss tensor(62.2160, device='cuda:0')
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
K-Means losses: tensor([[[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.1878e+02],
         [3.1878e+02],
         [3.1878e+02],
         [3.1878e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.3418e+02],
         [3.3418e+02],
         [3.3418e+02],
         [3.3418e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.4840e+02],
         [2.4840e+02],
         [2.4840e+02],
         [2.4840e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2942e+02],
         [2.2942e+02],
         [2.2942e+02],
         [2.2942e+02]],

        [[2.5474e+02],
         [2.5474e+02],
         [2.5474e+02],
         [2.5474e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2877e+02],
         [2.2877e+02],
         [2.2877e+02],
         [2.2877e+02]],

        [[2.7900e+02],
         [2.7900e+02],
         [2.7900e+02],
         [2.7900e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3706e+02],
         [2.3706e+02],
         [2.3706e+02],
         [2.3706e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [1.5259e-05]],

        [[3.1868e+02],
         [3.1868e+02],
         [3.1868e+02],
         [3.1868e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3631e+02],
         [2.3631e+02],
         [2.3631e+02],
         [2.3631e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.7633e+02],
         [3.7633e+02],
         [3.7633e+02],
         [3.7633e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.4716e+02],
         [3.4716e+02],
         [3.4716e+02],
         [3.4716e+02]],

        [[2.9486e+02],
         [2.9486e+02],
         [2.9486e+02],
         [2.9486e+02]],

        [[1.5259e-05],
         [1.5259e-05],
         [1.5259e-05],
         [1.5259e-05]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[2.7814e+02],
         [2.7814e+02],
         [2.7814e+02],
         [2.7814e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]]], device='cuda:0')
K-Means losses: torch.Size([64, 4, 1])
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
Parent Logits info torch.Size([64, 1081])
child logits info:
Length: 4
Size @0: torch.Size([64, 2])
Subclass loss shape torch.Size([64])
Subclass loss tensor([0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
        0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
        0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
        0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
        0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
        0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
        0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
        0.6937], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
        1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
        1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
        1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
        1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
        1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
        1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
        1.0990], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 550, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 514, in train_step
    loss += subclass_loss
RuntimeError: Output 0 of AllReduceBackward is a view and is being modified inplace. This view was created inside a custom Function (or because an input was returned as-is) and the autograd logic to handle view+inplace would override the custom backward associated with the custom Function, leading to incorrect gradients. This behavior is forbidden. You can fix this by cloning the output of the custom Function.
Subclass loss tensor([1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
        1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
        1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
        1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
        1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
        1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
        1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
        1.3875], device='cuda:0', grad_fn=<NllLossBackward0>)
Subclass loss shape torch.Size([64])
Subclass loss tensor([1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
        1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
        1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
        1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
        1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
        1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
        1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
        1.6090], device='cuda:0', grad_fn=<NllLossBackward0>)
tensor([[0.6924, 0.6923, 0.6926, 0.6932, 0.6931, 0.6933, 0.6934, 0.6930, 0.6942,
         0.6938, 0.6927, 0.6933, 0.6931, 0.6938, 0.6937, 0.6938, 0.6940, 0.6930,
         0.6929, 0.6928, 0.6928, 0.6937, 0.6934, 0.6927, 0.6935, 0.6933, 0.6942,
         0.6919, 0.6928, 0.6925, 0.6931, 0.6933, 0.6929, 0.6929, 0.6929, 0.6933,
         0.6931, 0.6932, 0.6938, 0.6934, 0.6931, 0.6933, 0.6942, 0.6932, 0.6932,
         0.6921, 0.6925, 0.6934, 0.6936, 0.6928, 0.6935, 0.6933, 0.6931, 0.6926,
         0.6937, 0.6928, 0.6939, 0.6944, 0.6927, 0.6938, 0.6932, 0.6940, 0.6920,
         0.6937],
        [1.0985, 1.0981, 1.0989, 1.0984, 1.0980, 1.0997, 1.0992, 1.0993, 1.0976,
         1.0975, 1.0996, 1.0987, 1.0985, 1.0992, 1.0987, 1.0991, 1.0984, 1.0978,
         1.0986, 1.0987, 1.0987, 1.0992, 1.0989, 1.0984, 1.0987, 1.0981, 1.0988,
         1.0988, 1.0984, 1.0984, 1.0983, 1.0999, 1.0993, 1.0984, 1.0988, 1.0987,
         1.0992, 1.0984, 1.0980, 1.0988, 1.0994, 1.0988, 1.0989, 1.0982, 1.0983,
         1.0984, 1.0986, 1.0988, 1.0990, 1.0976, 1.0987, 1.0985, 1.0973, 1.0986,
         1.0992, 1.0989, 1.0979, 1.0988, 1.0985, 1.0990, 1.0986, 1.0994, 1.0980,
         1.0990],
        [1.3870, 1.3852, 1.3877, 1.3860, 1.3865, 1.3865, 1.3878, 1.3864, 1.3866,
         1.3868, 1.3863, 1.3872, 1.3863, 1.3861, 1.3874, 1.3855, 1.3869, 1.3869,
         1.3851, 1.3859, 1.3883, 1.3861, 1.3865, 1.3864, 1.3867, 1.3870, 1.3880,
         1.3866, 1.3869, 1.3869, 1.3862, 1.3866, 1.3864, 1.3868, 1.3847, 1.3861,
         1.3853, 1.3857, 1.3857, 1.3865, 1.3855, 1.3856, 1.3856, 1.3876, 1.3862,
         1.3858, 1.3868, 1.3880, 1.3870, 1.3857, 1.3871, 1.3876, 1.3868, 1.3870,
         1.3862, 1.3866, 1.3844, 1.3861, 1.3875, 1.3853, 1.3858, 1.3871, 1.3857,
         1.3875],
        [1.6085, 1.6087, 1.6089, 1.6083, 1.6099, 1.6090, 1.6100, 1.6101, 1.6092,
         1.6080, 1.6099, 1.6096, 1.6104, 1.6094, 1.6096, 1.6097, 1.6088, 1.6091,
         1.6099, 1.6089, 1.6097, 1.6119, 1.6091, 1.6116, 1.6096, 1.6093, 1.6095,
         1.6089, 1.6081, 1.6096, 1.6089, 1.6088, 1.6101, 1.6093, 1.6082, 1.6093,
         1.6109, 1.6094, 1.6104, 1.6094, 1.6094, 1.6094, 1.6095, 1.6091, 1.6102,
         1.6092, 1.6080, 1.6108, 1.6097, 1.6087, 1.6100, 1.6109, 1.6085, 1.6093,
         1.6105, 1.6090, 1.6096, 1.6106, 1.6104, 1.6084, 1.6113, 1.6086, 1.6086,
         1.6090]], device='cuda:0', grad_fn=<CatBackward0>)
torch.Size([4, 64])
Best K index by datapoint: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
torch.Size([64])
K-means losses: torch.Size([4, 64])
Losses
Parent class loss: tensor(6.9857, device='cuda:0', grad_fn=<AllReduceBackward>)
Subclass loss tensor(0.6932, device='cuda:0', grad_fn=<DivBackward0>)
K-means loss tensor(62.2160, device='cuda:0')
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_deeper_cluster.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 64,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 10,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/PlantNet300k',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-06,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.0001,
                        'start_lr': 0.0001,
                        'warmup': 10,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:AutoEncoder(
  (encoder): Sequential(
    (0): Linear(in_features=1280, out_features=1024, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=1024, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=512, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=512, out_features=256, bias=True)
    (7): GELU(approximate='none')
  )
  (decoder): Sequential(
    (0): Linear(in_features=256, out_features=512, bias=True)
    (1): GELU(approximate='none')
    (2): Linear(in_features=512, out_features=768, bias=True)
    (3): GELU(approximate='none')
    (4): Linear(in_features=768, out_features=1024, bias=True)
    (5): GELU(approximate='none')
    (6): Linear(in_features=1024, out_features=1280, bias=True)
  )
  (dropout): Dropout(p=0.25, inplace=False)
  (out): Sigmoid()
)
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
Training dataset, length: 243904
INFO:root:Finetuning dataset created
Val dataset, length: 31104
INFO:root:Using AdamW
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:loaded optimizers from epoch 66
INFO:root:read-path: /home/rtcalumby/adam/luciano/LifeCLEFPlant2022/IN22K-vit.h.14-900e.pth.tar
INFO:root:Using AdamW
INFO:root:DistributedDataParallel(
  (module): FinetuningModel(
    (pretrained_model): VisionTransformer(
      (patch_embed): PatchEmbed(
        (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
      )
      (blocks): ModuleList(
        (0-31): 32 x Block(
          (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=1280, out_features=3840, bias=True)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=1280, out_features=1280, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
          (mlp): MLP(
            (fc1): Linear(in_features=1280, out_features=5120, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=5120, out_features=1280, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
      (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
    )
    (head_drop): Dropout(p=0.25, inplace=False)
  )
)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.19725e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09583e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.05929e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.27118e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.08891e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.01613e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.18652e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89472e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.80514e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14155e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.41589e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=3.5438e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.09639e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.00648e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.54544e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12601e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06089e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.15491e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22376e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.22623e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.93561e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17738e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.95029e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.86982e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17222e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.65096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=4.02321e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.64574e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.8402e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22316e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.05249e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=4.03985e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.17415e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.91236e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.08756e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18606e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.87534e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90337e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.1632e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.77083e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.835e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16091e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.29049e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.5665e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14071e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.5454e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.90868e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.10805e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.38637e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68831e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.11496e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.12094e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.46049e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.17386e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.43862e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.68068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.2384e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.05067e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=4.03441e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.12674e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.98182e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.55505e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11975e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.55449e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.95196e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17958e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.32479e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.71718e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=1.15365e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.52171e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.97404e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=8.2365e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.84119e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.11937e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59998e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.64824e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.21082e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.89856e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.8e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.25146e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.11543e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.94913e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.04817e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=6.86951e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.56696e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16563e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.79261e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.93091e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14678e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.47733e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.65823e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.20843e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.48958e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.94045e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.10851e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.01 s): objective=7.24526e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.34381e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.18286e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=7.3775e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.54651e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.13831e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.40674e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.41634e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=1.21654e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.52412e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53117e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.17373e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.59068e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.79914e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.16116e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.4341e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.70073e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.14847e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.33179e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54892e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.01 s): objective=1.21021e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.98354e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.74481e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.22682e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.8864e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.53357e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.14288e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=7.36204e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=4.04773e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.06354e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.01897e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.59192e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.13166e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.00 s, search 0.00 s): objective=7.47602e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.03 s, search 0.00 s): objective=3.80068e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=1.20337e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.7096e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=4.00211e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.11995e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.2457e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.64055e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.07836e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=6.82891e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.52844e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.08818e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=7.06269e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=3.43313e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.22931e-11 imbalance=1.360 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=8.09531e-12 imbalance=1.080 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=3.54504e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Clustering 5 points in 256D to 2 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.01 s, search 0.00 s): objective=1.2161e-11 imbalance=1.040 nsplit=0       
Clustering 5 points in 256D to 3 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.00 s): objective=7.81762e-12 imbalance=1.320 nsplit=0       
Clustering 5 points in 256D to 4 clusters, redo 1 times, 1 iterations
  Preprocessing in 0.00 s
  Iteration 0 (0.02 s, search 0.01 s): objective=3.94543e-12 imbalance=1.120 nsplit=0       
Number of training points (5) same as number of clusters, just copying
Process Process-1:
Traceback (most recent call last):
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/main_deeper_cluster.py", line 52, in process_main
    app_main(args=params)
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 551, in main
    (loss, reconstruction_loss, _new_lr, _new_wd, grad_stats, bottleneck_output), etime = gpu_timer(train_step)
                                                                                          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/src/utils/logging.py", line 21, in gpu_timer
    result = closure()
             ^^^^^^^^^
  File "/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/DeepCluster/engine_deeper_cluster.py", line 453, in train_step
    child_logits.to(device)
    ^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'to'
K-Means losses: tensor([[[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.1878e+02],
         [3.1878e+02],
         [3.1878e+02],
         [3.1878e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[1.5259e-05],
         [1.5259e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.3418e+02],
         [3.3418e+02],
         [3.3418e+02],
         [3.3418e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.0518e-05],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.4840e+02],
         [2.4840e+02],
         [2.4840e+02],
         [2.4840e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2942e+02],
         [2.2942e+02],
         [2.2942e+02],
         [2.2942e+02]],

        [[2.5474e+02],
         [2.5474e+02],
         [2.5474e+02],
         [2.5474e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.2877e+02],
         [2.2877e+02],
         [2.2877e+02],
         [2.2877e+02]],

        [[2.7900e+02],
         [2.7900e+02],
         [2.7900e+02],
         [2.7900e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3706e+02],
         [2.3706e+02],
         [2.3706e+02],
         [2.3706e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [1.5259e-05]],

        [[3.1868e+02],
         [3.1868e+02],
         [3.1868e+02],
         [3.1868e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[2.3631e+02],
         [2.3631e+02],
         [2.3631e+02],
         [2.3631e+02]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.7633e+02],
         [3.7633e+02],
         [3.7633e+02],
         [3.7633e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[3.4716e+02],
         [3.4716e+02],
         [3.4716e+02],
         [3.4716e+02]],

        [[2.9486e+02],
         [2.9486e+02],
         [2.9486e+02],
         [2.9486e+02]],

        [[1.5259e-05],
         [1.5259e-05],
         [1.5259e-05],
         [1.5259e-05]],

        [[3.0518e-05],
         [3.0518e-05],
         [3.0518e-05],
         [3.0518e-05]],

        [[2.7814e+02],
         [2.7814e+02],
         [2.7814e+02],
         [2.7814e+02]],

        [[0.0000e+00],
         [0.0000e+00],
         [3.0518e-05],
         [3.0518e-05]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]],

        [[0.0000e+00],
         [0.0000e+00],
         [0.0000e+00],
         [0.0000e+00]]], device='cuda:0')
K-Means losses: torch.Size([64, 4, 1])
Targets format: torch.Size([64])
Assignments format torch.Size([64, 4, 1])
